/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2022-08-17")
public class MailerServer {

  public interface Iface {

    public java.lang.String sendMail(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo) throws org.apache.thrift.TException;

    public void sendMail1(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo) throws org.apache.thrift.TException;

    public java.lang.String getTemplate(java.lang.String idPlantillaCorreo) throws org.apache.thrift.TException;

    public java.lang.String getTemplates() throws org.apache.thrift.TException;

    public java.lang.String insertTemplate(java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado) throws org.apache.thrift.TException;

    public java.lang.String updateTemplate(java.lang.String idPlantillaCorreo, java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void sendMail(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void sendMail1(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void getTemplate(java.lang.String idPlantillaCorreo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void getTemplates(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void insertTemplate(java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

    public void updateTemplate(java.lang.String idPlantillaCorreo, java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public java.lang.String sendMail(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo) throws org.apache.thrift.TException
    {
      send_sendMail(idPlantillaCorreo, destinatario, idTicket, nombre, codigo);
      return recv_sendMail();
    }

    public void send_sendMail(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo) throws org.apache.thrift.TException
    {
      sendMail_args args = new sendMail_args();
      args.setIdPlantillaCorreo(idPlantillaCorreo);
      args.setDestinatario(destinatario);
      args.setIdTicket(idTicket);
      args.setNombre(nombre);
      args.setCodigo(codigo);
      sendBase("sendMail", args);
    }

    public java.lang.String recv_sendMail() throws org.apache.thrift.TException
    {
      sendMail_result result = new sendMail_result();
      receiveBase(result, "sendMail");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "sendMail failed: unknown result");
    }

    public void sendMail1(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo) throws org.apache.thrift.TException
    {
      send_sendMail1(idPlantillaCorreo, destinatario, idTicket, nombre, codigo);
    }

    public void send_sendMail1(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo) throws org.apache.thrift.TException
    {
      sendMail1_args args = new sendMail1_args();
      args.setIdPlantillaCorreo(idPlantillaCorreo);
      args.setDestinatario(destinatario);
      args.setIdTicket(idTicket);
      args.setNombre(nombre);
      args.setCodigo(codigo);
      sendBaseOneway("sendMail1", args);
    }

    public java.lang.String getTemplate(java.lang.String idPlantillaCorreo) throws org.apache.thrift.TException
    {
      send_getTemplate(idPlantillaCorreo);
      return recv_getTemplate();
    }

    public void send_getTemplate(java.lang.String idPlantillaCorreo) throws org.apache.thrift.TException
    {
      getTemplate_args args = new getTemplate_args();
      args.setIdPlantillaCorreo(idPlantillaCorreo);
      sendBase("getTemplate", args);
    }

    public java.lang.String recv_getTemplate() throws org.apache.thrift.TException
    {
      getTemplate_result result = new getTemplate_result();
      receiveBase(result, "getTemplate");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getTemplate failed: unknown result");
    }

    public java.lang.String getTemplates() throws org.apache.thrift.TException
    {
      send_getTemplates();
      return recv_getTemplates();
    }

    public void send_getTemplates() throws org.apache.thrift.TException
    {
      getTemplates_args args = new getTemplates_args();
      sendBase("getTemplates", args);
    }

    public java.lang.String recv_getTemplates() throws org.apache.thrift.TException
    {
      getTemplates_result result = new getTemplates_result();
      receiveBase(result, "getTemplates");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getTemplates failed: unknown result");
    }

    public java.lang.String insertTemplate(java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado) throws org.apache.thrift.TException
    {
      send_insertTemplate(nombre, asunto, descripcion1, descripcion2, descripcion3, imagen, enlaceRedesSociales, telefono, direccion, estado);
      return recv_insertTemplate();
    }

    public void send_insertTemplate(java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado) throws org.apache.thrift.TException
    {
      insertTemplate_args args = new insertTemplate_args();
      args.setNombre(nombre);
      args.setAsunto(asunto);
      args.setDescripcion1(descripcion1);
      args.setDescripcion2(descripcion2);
      args.setDescripcion3(descripcion3);
      args.setImagen(imagen);
      args.setEnlaceRedesSociales(enlaceRedesSociales);
      args.setTelefono(telefono);
      args.setDireccion(direccion);
      args.setEstado(estado);
      sendBase("insertTemplate", args);
    }

    public java.lang.String recv_insertTemplate() throws org.apache.thrift.TException
    {
      insertTemplate_result result = new insertTemplate_result();
      receiveBase(result, "insertTemplate");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "insertTemplate failed: unknown result");
    }

    public java.lang.String updateTemplate(java.lang.String idPlantillaCorreo, java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado) throws org.apache.thrift.TException
    {
      send_updateTemplate(idPlantillaCorreo, nombre, asunto, descripcion1, descripcion2, descripcion3, imagen, enlaceRedesSociales, telefono, direccion, estado);
      return recv_updateTemplate();
    }

    public void send_updateTemplate(java.lang.String idPlantillaCorreo, java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado) throws org.apache.thrift.TException
    {
      updateTemplate_args args = new updateTemplate_args();
      args.setIdPlantillaCorreo(idPlantillaCorreo);
      args.setNombre(nombre);
      args.setAsunto(asunto);
      args.setDescripcion1(descripcion1);
      args.setDescripcion2(descripcion2);
      args.setDescripcion3(descripcion3);
      args.setImagen(imagen);
      args.setEnlaceRedesSociales(enlaceRedesSociales);
      args.setTelefono(telefono);
      args.setDireccion(direccion);
      args.setEstado(estado);
      sendBase("updateTemplate", args);
    }

    public java.lang.String recv_updateTemplate() throws org.apache.thrift.TException
    {
      updateTemplate_result result = new updateTemplate_result();
      receiveBase(result, "updateTemplate");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "updateTemplate failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void sendMail(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      sendMail_call method_call = new sendMail_call(idPlantillaCorreo, destinatario, idTicket, nombre, codigo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class sendMail_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private java.lang.String idPlantillaCorreo;
      private java.lang.String destinatario;
      private java.lang.String idTicket;
      private java.lang.String nombre;
      private java.lang.String codigo;
      public sendMail_call(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idPlantillaCorreo = idPlantillaCorreo;
        this.destinatario = destinatario;
        this.idTicket = idTicket;
        this.nombre = nombre;
        this.codigo = codigo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("sendMail", org.apache.thrift.protocol.TMessageType.CALL, 0));
        sendMail_args args = new sendMail_args();
        args.setIdPlantillaCorreo(idPlantillaCorreo);
        args.setDestinatario(destinatario);
        args.setIdTicket(idTicket);
        args.setNombre(nombre);
        args.setCodigo(codigo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_sendMail();
      }
    }

    public void sendMail1(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      sendMail1_call method_call = new sendMail1_call(idPlantillaCorreo, destinatario, idTicket, nombre, codigo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class sendMail1_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String idPlantillaCorreo;
      private java.lang.String destinatario;
      private java.lang.String idTicket;
      private java.lang.String nombre;
      private java.lang.String codigo;
      public sendMail1_call(java.lang.String idPlantillaCorreo, java.lang.String destinatario, java.lang.String idTicket, java.lang.String nombre, java.lang.String codigo, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, true);
        this.idPlantillaCorreo = idPlantillaCorreo;
        this.destinatario = destinatario;
        this.idTicket = idTicket;
        this.nombre = nombre;
        this.codigo = codigo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("sendMail1", org.apache.thrift.protocol.TMessageType.ONEWAY, 0));
        sendMail1_args args = new sendMail1_args();
        args.setIdPlantillaCorreo(idPlantillaCorreo);
        args.setDestinatario(destinatario);
        args.setIdTicket(idTicket);
        args.setNombre(nombre);
        args.setCodigo(codigo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void getTemplate(java.lang.String idPlantillaCorreo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getTemplate_call method_call = new getTemplate_call(idPlantillaCorreo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getTemplate_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private java.lang.String idPlantillaCorreo;
      public getTemplate_call(java.lang.String idPlantillaCorreo, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idPlantillaCorreo = idPlantillaCorreo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getTemplate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getTemplate_args args = new getTemplate_args();
        args.setIdPlantillaCorreo(idPlantillaCorreo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getTemplate();
      }
    }

    public void getTemplates(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getTemplates_call method_call = new getTemplates_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getTemplates_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      public getTemplates_call(org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getTemplates", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getTemplates_args args = new getTemplates_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getTemplates();
      }
    }

    public void insertTemplate(java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      insertTemplate_call method_call = new insertTemplate_call(nombre, asunto, descripcion1, descripcion2, descripcion3, imagen, enlaceRedesSociales, telefono, direccion, estado, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class insertTemplate_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private java.lang.String nombre;
      private java.lang.String asunto;
      private java.lang.String descripcion1;
      private java.lang.String descripcion2;
      private java.lang.String descripcion3;
      private java.lang.String imagen;
      private java.lang.String enlaceRedesSociales;
      private java.lang.String telefono;
      private java.lang.String direccion;
      private java.lang.String estado;
      public insertTemplate_call(java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.nombre = nombre;
        this.asunto = asunto;
        this.descripcion1 = descripcion1;
        this.descripcion2 = descripcion2;
        this.descripcion3 = descripcion3;
        this.imagen = imagen;
        this.enlaceRedesSociales = enlaceRedesSociales;
        this.telefono = telefono;
        this.direccion = direccion;
        this.estado = estado;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("insertTemplate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        insertTemplate_args args = new insertTemplate_args();
        args.setNombre(nombre);
        args.setAsunto(asunto);
        args.setDescripcion1(descripcion1);
        args.setDescripcion2(descripcion2);
        args.setDescripcion3(descripcion3);
        args.setImagen(imagen);
        args.setEnlaceRedesSociales(enlaceRedesSociales);
        args.setTelefono(telefono);
        args.setDireccion(direccion);
        args.setEstado(estado);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_insertTemplate();
      }
    }

    public void updateTemplate(java.lang.String idPlantillaCorreo, java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      updateTemplate_call method_call = new updateTemplate_call(idPlantillaCorreo, nombre, asunto, descripcion1, descripcion2, descripcion3, imagen, enlaceRedesSociales, telefono, direccion, estado, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class updateTemplate_call extends org.apache.thrift.async.TAsyncMethodCall<java.lang.String> {
      private java.lang.String idPlantillaCorreo;
      private java.lang.String nombre;
      private java.lang.String asunto;
      private java.lang.String descripcion1;
      private java.lang.String descripcion2;
      private java.lang.String descripcion3;
      private java.lang.String imagen;
      private java.lang.String enlaceRedesSociales;
      private java.lang.String telefono;
      private java.lang.String direccion;
      private java.lang.String estado;
      public updateTemplate_call(java.lang.String idPlantillaCorreo, java.lang.String nombre, java.lang.String asunto, java.lang.String descripcion1, java.lang.String descripcion2, java.lang.String descripcion3, java.lang.String imagen, java.lang.String enlaceRedesSociales, java.lang.String telefono, java.lang.String direccion, java.lang.String estado, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.idPlantillaCorreo = idPlantillaCorreo;
        this.nombre = nombre;
        this.asunto = asunto;
        this.descripcion1 = descripcion1;
        this.descripcion2 = descripcion2;
        this.descripcion3 = descripcion3;
        this.imagen = imagen;
        this.enlaceRedesSociales = enlaceRedesSociales;
        this.telefono = telefono;
        this.direccion = direccion;
        this.estado = estado;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("updateTemplate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        updateTemplate_args args = new updateTemplate_args();
        args.setIdPlantillaCorreo(idPlantillaCorreo);
        args.setNombre(nombre);
        args.setAsunto(asunto);
        args.setDescripcion1(descripcion1);
        args.setDescripcion2(descripcion2);
        args.setDescripcion3(descripcion3);
        args.setImagen(imagen);
        args.setEnlaceRedesSociales(enlaceRedesSociales);
        args.setTelefono(telefono);
        args.setDireccion(direccion);
        args.setEstado(estado);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.lang.String getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_updateTemplate();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("sendMail", new sendMail());
      processMap.put("sendMail1", new sendMail1());
      processMap.put("getTemplate", new getTemplate());
      processMap.put("getTemplates", new getTemplates());
      processMap.put("insertTemplate", new insertTemplate());
      processMap.put("updateTemplate", new updateTemplate());
      return processMap;
    }

    public static class sendMail<I extends Iface> extends org.apache.thrift.ProcessFunction<I, sendMail_args> {
      public sendMail() {
        super("sendMail");
      }

      public sendMail_args getEmptyArgsInstance() {
        return new sendMail_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public sendMail_result getResult(I iface, sendMail_args args) throws org.apache.thrift.TException {
        sendMail_result result = new sendMail_result();
        result.success = iface.sendMail(args.idPlantillaCorreo, args.destinatario, args.idTicket, args.nombre, args.codigo);
        return result;
      }
    }

    public static class sendMail1<I extends Iface> extends org.apache.thrift.ProcessFunction<I, sendMail1_args> {
      public sendMail1() {
        super("sendMail1");
      }

      public sendMail1_args getEmptyArgsInstance() {
        return new sendMail1_args();
      }

      protected boolean isOneway() {
        return true;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public org.apache.thrift.TBase getResult(I iface, sendMail1_args args) throws org.apache.thrift.TException {
        iface.sendMail1(args.idPlantillaCorreo, args.destinatario, args.idTicket, args.nombre, args.codigo);
        return null;
      }
    }

    public static class getTemplate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getTemplate_args> {
      public getTemplate() {
        super("getTemplate");
      }

      public getTemplate_args getEmptyArgsInstance() {
        return new getTemplate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getTemplate_result getResult(I iface, getTemplate_args args) throws org.apache.thrift.TException {
        getTemplate_result result = new getTemplate_result();
        result.success = iface.getTemplate(args.idPlantillaCorreo);
        return result;
      }
    }

    public static class getTemplates<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getTemplates_args> {
      public getTemplates() {
        super("getTemplates");
      }

      public getTemplates_args getEmptyArgsInstance() {
        return new getTemplates_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public getTemplates_result getResult(I iface, getTemplates_args args) throws org.apache.thrift.TException {
        getTemplates_result result = new getTemplates_result();
        result.success = iface.getTemplates();
        return result;
      }
    }

    public static class insertTemplate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, insertTemplate_args> {
      public insertTemplate() {
        super("insertTemplate");
      }

      public insertTemplate_args getEmptyArgsInstance() {
        return new insertTemplate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public insertTemplate_result getResult(I iface, insertTemplate_args args) throws org.apache.thrift.TException {
        insertTemplate_result result = new insertTemplate_result();
        result.success = iface.insertTemplate(args.nombre, args.asunto, args.descripcion1, args.descripcion2, args.descripcion3, args.imagen, args.enlaceRedesSociales, args.telefono, args.direccion, args.estado);
        return result;
      }
    }

    public static class updateTemplate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, updateTemplate_args> {
      public updateTemplate() {
        super("updateTemplate");
      }

      public updateTemplate_args getEmptyArgsInstance() {
        return new updateTemplate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      @Override
      protected boolean handleRuntimeExceptions() {
        return false;
      }

      public updateTemplate_result getResult(I iface, updateTemplate_args args) throws org.apache.thrift.TException {
        updateTemplate_result result = new updateTemplate_result();
        result.success = iface.updateTemplate(args.idPlantillaCorreo, args.nombre, args.asunto, args.descripcion1, args.descripcion2, args.descripcion3, args.imagen, args.enlaceRedesSociales, args.telefono, args.direccion, args.estado);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("sendMail", new sendMail());
      processMap.put("sendMail1", new sendMail1());
      processMap.put("getTemplate", new getTemplate());
      processMap.put("getTemplates", new getTemplates());
      processMap.put("insertTemplate", new insertTemplate());
      processMap.put("updateTemplate", new updateTemplate());
      return processMap;
    }

    public static class sendMail<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, sendMail_args, java.lang.String> {
      public sendMail() {
        super("sendMail");
      }

      public sendMail_args getEmptyArgsInstance() {
        return new sendMail_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            sendMail_result result = new sendMail_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            sendMail_result result = new sendMail_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, sendMail_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.sendMail(args.idPlantillaCorreo, args.destinatario, args.idTicket, args.nombre, args.codigo,resultHandler);
      }
    }

    public static class sendMail1<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, sendMail1_args, Void> {
      public sendMail1() {
        super("sendMail1");
      }

      public sendMail1_args getEmptyArgsInstance() {
        return new sendMail1_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
          }
          public void onError(java.lang.Exception e) {
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
            } else {
              _LOGGER.error("Exception inside oneway handler", e);
            }
          }
        };
      }

      protected boolean isOneway() {
        return true;
      }

      public void start(I iface, sendMail1_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.sendMail1(args.idPlantillaCorreo, args.destinatario, args.idTicket, args.nombre, args.codigo,resultHandler);
      }
    }

    public static class getTemplate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getTemplate_args, java.lang.String> {
      public getTemplate() {
        super("getTemplate");
      }

      public getTemplate_args getEmptyArgsInstance() {
        return new getTemplate_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            getTemplate_result result = new getTemplate_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getTemplate_result result = new getTemplate_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getTemplate_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.getTemplate(args.idPlantillaCorreo,resultHandler);
      }
    }

    public static class getTemplates<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getTemplates_args, java.lang.String> {
      public getTemplates() {
        super("getTemplates");
      }

      public getTemplates_args getEmptyArgsInstance() {
        return new getTemplates_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            getTemplates_result result = new getTemplates_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getTemplates_result result = new getTemplates_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getTemplates_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.getTemplates(resultHandler);
      }
    }

    public static class insertTemplate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, insertTemplate_args, java.lang.String> {
      public insertTemplate() {
        super("insertTemplate");
      }

      public insertTemplate_args getEmptyArgsInstance() {
        return new insertTemplate_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            insertTemplate_result result = new insertTemplate_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            insertTemplate_result result = new insertTemplate_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, insertTemplate_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.insertTemplate(args.nombre, args.asunto, args.descripcion1, args.descripcion2, args.descripcion3, args.imagen, args.enlaceRedesSociales, args.telefono, args.direccion, args.estado,resultHandler);
      }
    }

    public static class updateTemplate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, updateTemplate_args, java.lang.String> {
      public updateTemplate() {
        super("updateTemplate");
      }

      public updateTemplate_args getEmptyArgsInstance() {
        return new updateTemplate_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.lang.String> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.lang.String>() { 
          public void onComplete(java.lang.String o) {
            updateTemplate_result result = new updateTemplate_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            updateTemplate_result result = new updateTemplate_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, updateTemplate_args args, org.apache.thrift.async.AsyncMethodCallback<java.lang.String> resultHandler) throws org.apache.thrift.TException {
        iface.updateTemplate(args.idPlantillaCorreo, args.nombre, args.asunto, args.descripcion1, args.descripcion2, args.descripcion3, args.imagen, args.enlaceRedesSociales, args.telefono, args.direccion, args.estado,resultHandler);
      }
    }

  }

  public static class sendMail_args implements org.apache.thrift.TBase<sendMail_args, sendMail_args._Fields>, java.io.Serializable, Cloneable, Comparable<sendMail_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("sendMail_args");

    private static final org.apache.thrift.protocol.TField ID_PLANTILLA_CORREO_FIELD_DESC = new org.apache.thrift.protocol.TField("idPlantillaCorreo", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField DESTINATARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("destinatario", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField ID_TICKET_FIELD_DESC = new org.apache.thrift.protocol.TField("idTicket", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField CODIGO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigo", org.apache.thrift.protocol.TType.STRING, (short)5);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new sendMail_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new sendMail_argsTupleSchemeFactory();

    public java.lang.String idPlantillaCorreo; // required
    public java.lang.String destinatario; // required
    public java.lang.String idTicket; // required
    public java.lang.String nombre; // required
    public java.lang.String codigo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_PLANTILLA_CORREO((short)1, "idPlantillaCorreo"),
      DESTINATARIO((short)2, "destinatario"),
      ID_TICKET((short)3, "idTicket"),
      NOMBRE((short)4, "nombre"),
      CODIGO((short)5, "codigo");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_PLANTILLA_CORREO
            return ID_PLANTILLA_CORREO;
          case 2: // DESTINATARIO
            return DESTINATARIO;
          case 3: // ID_TICKET
            return ID_TICKET;
          case 4: // NOMBRE
            return NOMBRE;
          case 5: // CODIGO
            return CODIGO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_PLANTILLA_CORREO, new org.apache.thrift.meta_data.FieldMetaData("idPlantillaCorreo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESTINATARIO, new org.apache.thrift.meta_data.FieldMetaData("destinatario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ID_TICKET, new org.apache.thrift.meta_data.FieldMetaData("idTicket", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CODIGO, new org.apache.thrift.meta_data.FieldMetaData("codigo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(sendMail_args.class, metaDataMap);
    }

    public sendMail_args() {
    }

    public sendMail_args(
      java.lang.String idPlantillaCorreo,
      java.lang.String destinatario,
      java.lang.String idTicket,
      java.lang.String nombre,
      java.lang.String codigo)
    {
      this();
      this.idPlantillaCorreo = idPlantillaCorreo;
      this.destinatario = destinatario;
      this.idTicket = idTicket;
      this.nombre = nombre;
      this.codigo = codigo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public sendMail_args(sendMail_args other) {
      if (other.isSetIdPlantillaCorreo()) {
        this.idPlantillaCorreo = other.idPlantillaCorreo;
      }
      if (other.isSetDestinatario()) {
        this.destinatario = other.destinatario;
      }
      if (other.isSetIdTicket()) {
        this.idTicket = other.idTicket;
      }
      if (other.isSetNombre()) {
        this.nombre = other.nombre;
      }
      if (other.isSetCodigo()) {
        this.codigo = other.codigo;
      }
    }

    public sendMail_args deepCopy() {
      return new sendMail_args(this);
    }

    @Override
    public void clear() {
      this.idPlantillaCorreo = null;
      this.destinatario = null;
      this.idTicket = null;
      this.nombre = null;
      this.codigo = null;
    }

    public java.lang.String getIdPlantillaCorreo() {
      return this.idPlantillaCorreo;
    }

    public sendMail_args setIdPlantillaCorreo(java.lang.String idPlantillaCorreo) {
      this.idPlantillaCorreo = idPlantillaCorreo;
      return this;
    }

    public void unsetIdPlantillaCorreo() {
      this.idPlantillaCorreo = null;
    }

    /** Returns true if field idPlantillaCorreo is set (has been assigned a value) and false otherwise */
    public boolean isSetIdPlantillaCorreo() {
      return this.idPlantillaCorreo != null;
    }

    public void setIdPlantillaCorreoIsSet(boolean value) {
      if (!value) {
        this.idPlantillaCorreo = null;
      }
    }

    public java.lang.String getDestinatario() {
      return this.destinatario;
    }

    public sendMail_args setDestinatario(java.lang.String destinatario) {
      this.destinatario = destinatario;
      return this;
    }

    public void unsetDestinatario() {
      this.destinatario = null;
    }

    /** Returns true if field destinatario is set (has been assigned a value) and false otherwise */
    public boolean isSetDestinatario() {
      return this.destinatario != null;
    }

    public void setDestinatarioIsSet(boolean value) {
      if (!value) {
        this.destinatario = null;
      }
    }

    public java.lang.String getIdTicket() {
      return this.idTicket;
    }

    public sendMail_args setIdTicket(java.lang.String idTicket) {
      this.idTicket = idTicket;
      return this;
    }

    public void unsetIdTicket() {
      this.idTicket = null;
    }

    /** Returns true if field idTicket is set (has been assigned a value) and false otherwise */
    public boolean isSetIdTicket() {
      return this.idTicket != null;
    }

    public void setIdTicketIsSet(boolean value) {
      if (!value) {
        this.idTicket = null;
      }
    }

    public java.lang.String getNombre() {
      return this.nombre;
    }

    public sendMail_args setNombre(java.lang.String nombre) {
      this.nombre = nombre;
      return this;
    }

    public void unsetNombre() {
      this.nombre = null;
    }

    /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
    public boolean isSetNombre() {
      return this.nombre != null;
    }

    public void setNombreIsSet(boolean value) {
      if (!value) {
        this.nombre = null;
      }
    }

    public java.lang.String getCodigo() {
      return this.codigo;
    }

    public sendMail_args setCodigo(java.lang.String codigo) {
      this.codigo = codigo;
      return this;
    }

    public void unsetCodigo() {
      this.codigo = null;
    }

    /** Returns true if field codigo is set (has been assigned a value) and false otherwise */
    public boolean isSetCodigo() {
      return this.codigo != null;
    }

    public void setCodigoIsSet(boolean value) {
      if (!value) {
        this.codigo = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        if (value == null) {
          unsetIdPlantillaCorreo();
        } else {
          setIdPlantillaCorreo((java.lang.String)value);
        }
        break;

      case DESTINATARIO:
        if (value == null) {
          unsetDestinatario();
        } else {
          setDestinatario((java.lang.String)value);
        }
        break;

      case ID_TICKET:
        if (value == null) {
          unsetIdTicket();
        } else {
          setIdTicket((java.lang.String)value);
        }
        break;

      case NOMBRE:
        if (value == null) {
          unsetNombre();
        } else {
          setNombre((java.lang.String)value);
        }
        break;

      case CODIGO:
        if (value == null) {
          unsetCodigo();
        } else {
          setCodigo((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        return getIdPlantillaCorreo();

      case DESTINATARIO:
        return getDestinatario();

      case ID_TICKET:
        return getIdTicket();

      case NOMBRE:
        return getNombre();

      case CODIGO:
        return getCodigo();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_PLANTILLA_CORREO:
        return isSetIdPlantillaCorreo();
      case DESTINATARIO:
        return isSetDestinatario();
      case ID_TICKET:
        return isSetIdTicket();
      case NOMBRE:
        return isSetNombre();
      case CODIGO:
        return isSetCodigo();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof sendMail_args)
        return this.equals((sendMail_args)that);
      return false;
    }

    public boolean equals(sendMail_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idPlantillaCorreo = true && this.isSetIdPlantillaCorreo();
      boolean that_present_idPlantillaCorreo = true && that.isSetIdPlantillaCorreo();
      if (this_present_idPlantillaCorreo || that_present_idPlantillaCorreo) {
        if (!(this_present_idPlantillaCorreo && that_present_idPlantillaCorreo))
          return false;
        if (!this.idPlantillaCorreo.equals(that.idPlantillaCorreo))
          return false;
      }

      boolean this_present_destinatario = true && this.isSetDestinatario();
      boolean that_present_destinatario = true && that.isSetDestinatario();
      if (this_present_destinatario || that_present_destinatario) {
        if (!(this_present_destinatario && that_present_destinatario))
          return false;
        if (!this.destinatario.equals(that.destinatario))
          return false;
      }

      boolean this_present_idTicket = true && this.isSetIdTicket();
      boolean that_present_idTicket = true && that.isSetIdTicket();
      if (this_present_idTicket || that_present_idTicket) {
        if (!(this_present_idTicket && that_present_idTicket))
          return false;
        if (!this.idTicket.equals(that.idTicket))
          return false;
      }

      boolean this_present_nombre = true && this.isSetNombre();
      boolean that_present_nombre = true && that.isSetNombre();
      if (this_present_nombre || that_present_nombre) {
        if (!(this_present_nombre && that_present_nombre))
          return false;
        if (!this.nombre.equals(that.nombre))
          return false;
      }

      boolean this_present_codigo = true && this.isSetCodigo();
      boolean that_present_codigo = true && that.isSetCodigo();
      if (this_present_codigo || that_present_codigo) {
        if (!(this_present_codigo && that_present_codigo))
          return false;
        if (!this.codigo.equals(that.codigo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetIdPlantillaCorreo()) ? 131071 : 524287);
      if (isSetIdPlantillaCorreo())
        hashCode = hashCode * 8191 + idPlantillaCorreo.hashCode();

      hashCode = hashCode * 8191 + ((isSetDestinatario()) ? 131071 : 524287);
      if (isSetDestinatario())
        hashCode = hashCode * 8191 + destinatario.hashCode();

      hashCode = hashCode * 8191 + ((isSetIdTicket()) ? 131071 : 524287);
      if (isSetIdTicket())
        hashCode = hashCode * 8191 + idTicket.hashCode();

      hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
      if (isSetNombre())
        hashCode = hashCode * 8191 + nombre.hashCode();

      hashCode = hashCode * 8191 + ((isSetCodigo()) ? 131071 : 524287);
      if (isSetCodigo())
        hashCode = hashCode * 8191 + codigo.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(sendMail_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdPlantillaCorreo()).compareTo(other.isSetIdPlantillaCorreo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdPlantillaCorreo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idPlantillaCorreo, other.idPlantillaCorreo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDestinatario()).compareTo(other.isSetDestinatario());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDestinatario()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.destinatario, other.destinatario);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetIdTicket()).compareTo(other.isSetIdTicket());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdTicket()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idTicket, other.idTicket);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNombre()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCodigo()).compareTo(other.isSetCodigo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCodigo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigo, other.codigo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("sendMail_args(");
      boolean first = true;

      sb.append("idPlantillaCorreo:");
      if (this.idPlantillaCorreo == null) {
        sb.append("null");
      } else {
        sb.append(this.idPlantillaCorreo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("destinatario:");
      if (this.destinatario == null) {
        sb.append("null");
      } else {
        sb.append(this.destinatario);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("idTicket:");
      if (this.idTicket == null) {
        sb.append("null");
      } else {
        sb.append(this.idTicket);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("nombre:");
      if (this.nombre == null) {
        sb.append("null");
      } else {
        sb.append(this.nombre);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("codigo:");
      if (this.codigo == null) {
        sb.append("null");
      } else {
        sb.append(this.codigo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class sendMail_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public sendMail_argsStandardScheme getScheme() {
        return new sendMail_argsStandardScheme();
      }
    }

    private static class sendMail_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<sendMail_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, sendMail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_PLANTILLA_CORREO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.idPlantillaCorreo = iprot.readString();
                struct.setIdPlantillaCorreoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DESTINATARIO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.destinatario = iprot.readString();
                struct.setDestinatarioIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ID_TICKET
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.idTicket = iprot.readString();
                struct.setIdTicketIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // NOMBRE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.nombre = iprot.readString();
                struct.setNombreIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // CODIGO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.codigo = iprot.readString();
                struct.setCodigoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, sendMail_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.idPlantillaCorreo != null) {
          oprot.writeFieldBegin(ID_PLANTILLA_CORREO_FIELD_DESC);
          oprot.writeString(struct.idPlantillaCorreo);
          oprot.writeFieldEnd();
        }
        if (struct.destinatario != null) {
          oprot.writeFieldBegin(DESTINATARIO_FIELD_DESC);
          oprot.writeString(struct.destinatario);
          oprot.writeFieldEnd();
        }
        if (struct.idTicket != null) {
          oprot.writeFieldBegin(ID_TICKET_FIELD_DESC);
          oprot.writeString(struct.idTicket);
          oprot.writeFieldEnd();
        }
        if (struct.nombre != null) {
          oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
          oprot.writeString(struct.nombre);
          oprot.writeFieldEnd();
        }
        if (struct.codigo != null) {
          oprot.writeFieldBegin(CODIGO_FIELD_DESC);
          oprot.writeString(struct.codigo);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class sendMail_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public sendMail_argsTupleScheme getScheme() {
        return new sendMail_argsTupleScheme();
      }
    }

    private static class sendMail_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<sendMail_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, sendMail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdPlantillaCorreo()) {
          optionals.set(0);
        }
        if (struct.isSetDestinatario()) {
          optionals.set(1);
        }
        if (struct.isSetIdTicket()) {
          optionals.set(2);
        }
        if (struct.isSetNombre()) {
          optionals.set(3);
        }
        if (struct.isSetCodigo()) {
          optionals.set(4);
        }
        oprot.writeBitSet(optionals, 5);
        if (struct.isSetIdPlantillaCorreo()) {
          oprot.writeString(struct.idPlantillaCorreo);
        }
        if (struct.isSetDestinatario()) {
          oprot.writeString(struct.destinatario);
        }
        if (struct.isSetIdTicket()) {
          oprot.writeString(struct.idTicket);
        }
        if (struct.isSetNombre()) {
          oprot.writeString(struct.nombre);
        }
        if (struct.isSetCodigo()) {
          oprot.writeString(struct.codigo);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, sendMail_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(5);
        if (incoming.get(0)) {
          struct.idPlantillaCorreo = iprot.readString();
          struct.setIdPlantillaCorreoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.destinatario = iprot.readString();
          struct.setDestinatarioIsSet(true);
        }
        if (incoming.get(2)) {
          struct.idTicket = iprot.readString();
          struct.setIdTicketIsSet(true);
        }
        if (incoming.get(3)) {
          struct.nombre = iprot.readString();
          struct.setNombreIsSet(true);
        }
        if (incoming.get(4)) {
          struct.codigo = iprot.readString();
          struct.setCodigoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class sendMail_result implements org.apache.thrift.TBase<sendMail_result, sendMail_result._Fields>, java.io.Serializable, Cloneable, Comparable<sendMail_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("sendMail_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new sendMail_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new sendMail_resultTupleSchemeFactory();

    public java.lang.String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(sendMail_result.class, metaDataMap);
    }

    public sendMail_result() {
    }

    public sendMail_result(
      java.lang.String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public sendMail_result(sendMail_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public sendMail_result deepCopy() {
      return new sendMail_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public sendMail_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof sendMail_result)
        return this.equals((sendMail_result)that);
      return false;
    }

    public boolean equals(sendMail_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(sendMail_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("sendMail_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class sendMail_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public sendMail_resultStandardScheme getScheme() {
        return new sendMail_resultStandardScheme();
      }
    }

    private static class sendMail_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<sendMail_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, sendMail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, sendMail_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class sendMail_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public sendMail_resultTupleScheme getScheme() {
        return new sendMail_resultTupleScheme();
      }
    }

    private static class sendMail_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<sendMail_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, sendMail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, sendMail_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class sendMail1_args implements org.apache.thrift.TBase<sendMail1_args, sendMail1_args._Fields>, java.io.Serializable, Cloneable, Comparable<sendMail1_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("sendMail1_args");

    private static final org.apache.thrift.protocol.TField ID_PLANTILLA_CORREO_FIELD_DESC = new org.apache.thrift.protocol.TField("idPlantillaCorreo", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField DESTINATARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("destinatario", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField ID_TICKET_FIELD_DESC = new org.apache.thrift.protocol.TField("idTicket", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField CODIGO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigo", org.apache.thrift.protocol.TType.STRING, (short)5);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new sendMail1_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new sendMail1_argsTupleSchemeFactory();

    public java.lang.String idPlantillaCorreo; // required
    public java.lang.String destinatario; // required
    public java.lang.String idTicket; // required
    public java.lang.String nombre; // required
    public java.lang.String codigo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_PLANTILLA_CORREO((short)1, "idPlantillaCorreo"),
      DESTINATARIO((short)2, "destinatario"),
      ID_TICKET((short)3, "idTicket"),
      NOMBRE((short)4, "nombre"),
      CODIGO((short)5, "codigo");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_PLANTILLA_CORREO
            return ID_PLANTILLA_CORREO;
          case 2: // DESTINATARIO
            return DESTINATARIO;
          case 3: // ID_TICKET
            return ID_TICKET;
          case 4: // NOMBRE
            return NOMBRE;
          case 5: // CODIGO
            return CODIGO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_PLANTILLA_CORREO, new org.apache.thrift.meta_data.FieldMetaData("idPlantillaCorreo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESTINATARIO, new org.apache.thrift.meta_data.FieldMetaData("destinatario", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ID_TICKET, new org.apache.thrift.meta_data.FieldMetaData("idTicket", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CODIGO, new org.apache.thrift.meta_data.FieldMetaData("codigo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(sendMail1_args.class, metaDataMap);
    }

    public sendMail1_args() {
    }

    public sendMail1_args(
      java.lang.String idPlantillaCorreo,
      java.lang.String destinatario,
      java.lang.String idTicket,
      java.lang.String nombre,
      java.lang.String codigo)
    {
      this();
      this.idPlantillaCorreo = idPlantillaCorreo;
      this.destinatario = destinatario;
      this.idTicket = idTicket;
      this.nombre = nombre;
      this.codigo = codigo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public sendMail1_args(sendMail1_args other) {
      if (other.isSetIdPlantillaCorreo()) {
        this.idPlantillaCorreo = other.idPlantillaCorreo;
      }
      if (other.isSetDestinatario()) {
        this.destinatario = other.destinatario;
      }
      if (other.isSetIdTicket()) {
        this.idTicket = other.idTicket;
      }
      if (other.isSetNombre()) {
        this.nombre = other.nombre;
      }
      if (other.isSetCodigo()) {
        this.codigo = other.codigo;
      }
    }

    public sendMail1_args deepCopy() {
      return new sendMail1_args(this);
    }

    @Override
    public void clear() {
      this.idPlantillaCorreo = null;
      this.destinatario = null;
      this.idTicket = null;
      this.nombre = null;
      this.codigo = null;
    }

    public java.lang.String getIdPlantillaCorreo() {
      return this.idPlantillaCorreo;
    }

    public sendMail1_args setIdPlantillaCorreo(java.lang.String idPlantillaCorreo) {
      this.idPlantillaCorreo = idPlantillaCorreo;
      return this;
    }

    public void unsetIdPlantillaCorreo() {
      this.idPlantillaCorreo = null;
    }

    /** Returns true if field idPlantillaCorreo is set (has been assigned a value) and false otherwise */
    public boolean isSetIdPlantillaCorreo() {
      return this.idPlantillaCorreo != null;
    }

    public void setIdPlantillaCorreoIsSet(boolean value) {
      if (!value) {
        this.idPlantillaCorreo = null;
      }
    }

    public java.lang.String getDestinatario() {
      return this.destinatario;
    }

    public sendMail1_args setDestinatario(java.lang.String destinatario) {
      this.destinatario = destinatario;
      return this;
    }

    public void unsetDestinatario() {
      this.destinatario = null;
    }

    /** Returns true if field destinatario is set (has been assigned a value) and false otherwise */
    public boolean isSetDestinatario() {
      return this.destinatario != null;
    }

    public void setDestinatarioIsSet(boolean value) {
      if (!value) {
        this.destinatario = null;
      }
    }

    public java.lang.String getIdTicket() {
      return this.idTicket;
    }

    public sendMail1_args setIdTicket(java.lang.String idTicket) {
      this.idTicket = idTicket;
      return this;
    }

    public void unsetIdTicket() {
      this.idTicket = null;
    }

    /** Returns true if field idTicket is set (has been assigned a value) and false otherwise */
    public boolean isSetIdTicket() {
      return this.idTicket != null;
    }

    public void setIdTicketIsSet(boolean value) {
      if (!value) {
        this.idTicket = null;
      }
    }

    public java.lang.String getNombre() {
      return this.nombre;
    }

    public sendMail1_args setNombre(java.lang.String nombre) {
      this.nombre = nombre;
      return this;
    }

    public void unsetNombre() {
      this.nombre = null;
    }

    /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
    public boolean isSetNombre() {
      return this.nombre != null;
    }

    public void setNombreIsSet(boolean value) {
      if (!value) {
        this.nombre = null;
      }
    }

    public java.lang.String getCodigo() {
      return this.codigo;
    }

    public sendMail1_args setCodigo(java.lang.String codigo) {
      this.codigo = codigo;
      return this;
    }

    public void unsetCodigo() {
      this.codigo = null;
    }

    /** Returns true if field codigo is set (has been assigned a value) and false otherwise */
    public boolean isSetCodigo() {
      return this.codigo != null;
    }

    public void setCodigoIsSet(boolean value) {
      if (!value) {
        this.codigo = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        if (value == null) {
          unsetIdPlantillaCorreo();
        } else {
          setIdPlantillaCorreo((java.lang.String)value);
        }
        break;

      case DESTINATARIO:
        if (value == null) {
          unsetDestinatario();
        } else {
          setDestinatario((java.lang.String)value);
        }
        break;

      case ID_TICKET:
        if (value == null) {
          unsetIdTicket();
        } else {
          setIdTicket((java.lang.String)value);
        }
        break;

      case NOMBRE:
        if (value == null) {
          unsetNombre();
        } else {
          setNombre((java.lang.String)value);
        }
        break;

      case CODIGO:
        if (value == null) {
          unsetCodigo();
        } else {
          setCodigo((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        return getIdPlantillaCorreo();

      case DESTINATARIO:
        return getDestinatario();

      case ID_TICKET:
        return getIdTicket();

      case NOMBRE:
        return getNombre();

      case CODIGO:
        return getCodigo();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_PLANTILLA_CORREO:
        return isSetIdPlantillaCorreo();
      case DESTINATARIO:
        return isSetDestinatario();
      case ID_TICKET:
        return isSetIdTicket();
      case NOMBRE:
        return isSetNombre();
      case CODIGO:
        return isSetCodigo();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof sendMail1_args)
        return this.equals((sendMail1_args)that);
      return false;
    }

    public boolean equals(sendMail1_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idPlantillaCorreo = true && this.isSetIdPlantillaCorreo();
      boolean that_present_idPlantillaCorreo = true && that.isSetIdPlantillaCorreo();
      if (this_present_idPlantillaCorreo || that_present_idPlantillaCorreo) {
        if (!(this_present_idPlantillaCorreo && that_present_idPlantillaCorreo))
          return false;
        if (!this.idPlantillaCorreo.equals(that.idPlantillaCorreo))
          return false;
      }

      boolean this_present_destinatario = true && this.isSetDestinatario();
      boolean that_present_destinatario = true && that.isSetDestinatario();
      if (this_present_destinatario || that_present_destinatario) {
        if (!(this_present_destinatario && that_present_destinatario))
          return false;
        if (!this.destinatario.equals(that.destinatario))
          return false;
      }

      boolean this_present_idTicket = true && this.isSetIdTicket();
      boolean that_present_idTicket = true && that.isSetIdTicket();
      if (this_present_idTicket || that_present_idTicket) {
        if (!(this_present_idTicket && that_present_idTicket))
          return false;
        if (!this.idTicket.equals(that.idTicket))
          return false;
      }

      boolean this_present_nombre = true && this.isSetNombre();
      boolean that_present_nombre = true && that.isSetNombre();
      if (this_present_nombre || that_present_nombre) {
        if (!(this_present_nombre && that_present_nombre))
          return false;
        if (!this.nombre.equals(that.nombre))
          return false;
      }

      boolean this_present_codigo = true && this.isSetCodigo();
      boolean that_present_codigo = true && that.isSetCodigo();
      if (this_present_codigo || that_present_codigo) {
        if (!(this_present_codigo && that_present_codigo))
          return false;
        if (!this.codigo.equals(that.codigo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetIdPlantillaCorreo()) ? 131071 : 524287);
      if (isSetIdPlantillaCorreo())
        hashCode = hashCode * 8191 + idPlantillaCorreo.hashCode();

      hashCode = hashCode * 8191 + ((isSetDestinatario()) ? 131071 : 524287);
      if (isSetDestinatario())
        hashCode = hashCode * 8191 + destinatario.hashCode();

      hashCode = hashCode * 8191 + ((isSetIdTicket()) ? 131071 : 524287);
      if (isSetIdTicket())
        hashCode = hashCode * 8191 + idTicket.hashCode();

      hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
      if (isSetNombre())
        hashCode = hashCode * 8191 + nombre.hashCode();

      hashCode = hashCode * 8191 + ((isSetCodigo()) ? 131071 : 524287);
      if (isSetCodigo())
        hashCode = hashCode * 8191 + codigo.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(sendMail1_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdPlantillaCorreo()).compareTo(other.isSetIdPlantillaCorreo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdPlantillaCorreo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idPlantillaCorreo, other.idPlantillaCorreo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDestinatario()).compareTo(other.isSetDestinatario());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDestinatario()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.destinatario, other.destinatario);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetIdTicket()).compareTo(other.isSetIdTicket());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdTicket()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idTicket, other.idTicket);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNombre()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetCodigo()).compareTo(other.isSetCodigo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetCodigo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigo, other.codigo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("sendMail1_args(");
      boolean first = true;

      sb.append("idPlantillaCorreo:");
      if (this.idPlantillaCorreo == null) {
        sb.append("null");
      } else {
        sb.append(this.idPlantillaCorreo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("destinatario:");
      if (this.destinatario == null) {
        sb.append("null");
      } else {
        sb.append(this.destinatario);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("idTicket:");
      if (this.idTicket == null) {
        sb.append("null");
      } else {
        sb.append(this.idTicket);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("nombre:");
      if (this.nombre == null) {
        sb.append("null");
      } else {
        sb.append(this.nombre);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("codigo:");
      if (this.codigo == null) {
        sb.append("null");
      } else {
        sb.append(this.codigo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class sendMail1_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public sendMail1_argsStandardScheme getScheme() {
        return new sendMail1_argsStandardScheme();
      }
    }

    private static class sendMail1_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<sendMail1_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, sendMail1_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_PLANTILLA_CORREO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.idPlantillaCorreo = iprot.readString();
                struct.setIdPlantillaCorreoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DESTINATARIO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.destinatario = iprot.readString();
                struct.setDestinatarioIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ID_TICKET
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.idTicket = iprot.readString();
                struct.setIdTicketIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // NOMBRE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.nombre = iprot.readString();
                struct.setNombreIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // CODIGO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.codigo = iprot.readString();
                struct.setCodigoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, sendMail1_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.idPlantillaCorreo != null) {
          oprot.writeFieldBegin(ID_PLANTILLA_CORREO_FIELD_DESC);
          oprot.writeString(struct.idPlantillaCorreo);
          oprot.writeFieldEnd();
        }
        if (struct.destinatario != null) {
          oprot.writeFieldBegin(DESTINATARIO_FIELD_DESC);
          oprot.writeString(struct.destinatario);
          oprot.writeFieldEnd();
        }
        if (struct.idTicket != null) {
          oprot.writeFieldBegin(ID_TICKET_FIELD_DESC);
          oprot.writeString(struct.idTicket);
          oprot.writeFieldEnd();
        }
        if (struct.nombre != null) {
          oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
          oprot.writeString(struct.nombre);
          oprot.writeFieldEnd();
        }
        if (struct.codigo != null) {
          oprot.writeFieldBegin(CODIGO_FIELD_DESC);
          oprot.writeString(struct.codigo);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class sendMail1_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public sendMail1_argsTupleScheme getScheme() {
        return new sendMail1_argsTupleScheme();
      }
    }

    private static class sendMail1_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<sendMail1_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, sendMail1_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdPlantillaCorreo()) {
          optionals.set(0);
        }
        if (struct.isSetDestinatario()) {
          optionals.set(1);
        }
        if (struct.isSetIdTicket()) {
          optionals.set(2);
        }
        if (struct.isSetNombre()) {
          optionals.set(3);
        }
        if (struct.isSetCodigo()) {
          optionals.set(4);
        }
        oprot.writeBitSet(optionals, 5);
        if (struct.isSetIdPlantillaCorreo()) {
          oprot.writeString(struct.idPlantillaCorreo);
        }
        if (struct.isSetDestinatario()) {
          oprot.writeString(struct.destinatario);
        }
        if (struct.isSetIdTicket()) {
          oprot.writeString(struct.idTicket);
        }
        if (struct.isSetNombre()) {
          oprot.writeString(struct.nombre);
        }
        if (struct.isSetCodigo()) {
          oprot.writeString(struct.codigo);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, sendMail1_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(5);
        if (incoming.get(0)) {
          struct.idPlantillaCorreo = iprot.readString();
          struct.setIdPlantillaCorreoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.destinatario = iprot.readString();
          struct.setDestinatarioIsSet(true);
        }
        if (incoming.get(2)) {
          struct.idTicket = iprot.readString();
          struct.setIdTicketIsSet(true);
        }
        if (incoming.get(3)) {
          struct.nombre = iprot.readString();
          struct.setNombreIsSet(true);
        }
        if (incoming.get(4)) {
          struct.codigo = iprot.readString();
          struct.setCodigoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getTemplate_args implements org.apache.thrift.TBase<getTemplate_args, getTemplate_args._Fields>, java.io.Serializable, Cloneable, Comparable<getTemplate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getTemplate_args");

    private static final org.apache.thrift.protocol.TField ID_PLANTILLA_CORREO_FIELD_DESC = new org.apache.thrift.protocol.TField("idPlantillaCorreo", org.apache.thrift.protocol.TType.STRING, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getTemplate_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getTemplate_argsTupleSchemeFactory();

    public java.lang.String idPlantillaCorreo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_PLANTILLA_CORREO((short)1, "idPlantillaCorreo");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_PLANTILLA_CORREO
            return ID_PLANTILLA_CORREO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_PLANTILLA_CORREO, new org.apache.thrift.meta_data.FieldMetaData("idPlantillaCorreo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getTemplate_args.class, metaDataMap);
    }

    public getTemplate_args() {
    }

    public getTemplate_args(
      java.lang.String idPlantillaCorreo)
    {
      this();
      this.idPlantillaCorreo = idPlantillaCorreo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getTemplate_args(getTemplate_args other) {
      if (other.isSetIdPlantillaCorreo()) {
        this.idPlantillaCorreo = other.idPlantillaCorreo;
      }
    }

    public getTemplate_args deepCopy() {
      return new getTemplate_args(this);
    }

    @Override
    public void clear() {
      this.idPlantillaCorreo = null;
    }

    public java.lang.String getIdPlantillaCorreo() {
      return this.idPlantillaCorreo;
    }

    public getTemplate_args setIdPlantillaCorreo(java.lang.String idPlantillaCorreo) {
      this.idPlantillaCorreo = idPlantillaCorreo;
      return this;
    }

    public void unsetIdPlantillaCorreo() {
      this.idPlantillaCorreo = null;
    }

    /** Returns true if field idPlantillaCorreo is set (has been assigned a value) and false otherwise */
    public boolean isSetIdPlantillaCorreo() {
      return this.idPlantillaCorreo != null;
    }

    public void setIdPlantillaCorreoIsSet(boolean value) {
      if (!value) {
        this.idPlantillaCorreo = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        if (value == null) {
          unsetIdPlantillaCorreo();
        } else {
          setIdPlantillaCorreo((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        return getIdPlantillaCorreo();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_PLANTILLA_CORREO:
        return isSetIdPlantillaCorreo();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getTemplate_args)
        return this.equals((getTemplate_args)that);
      return false;
    }

    public boolean equals(getTemplate_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idPlantillaCorreo = true && this.isSetIdPlantillaCorreo();
      boolean that_present_idPlantillaCorreo = true && that.isSetIdPlantillaCorreo();
      if (this_present_idPlantillaCorreo || that_present_idPlantillaCorreo) {
        if (!(this_present_idPlantillaCorreo && that_present_idPlantillaCorreo))
          return false;
        if (!this.idPlantillaCorreo.equals(that.idPlantillaCorreo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetIdPlantillaCorreo()) ? 131071 : 524287);
      if (isSetIdPlantillaCorreo())
        hashCode = hashCode * 8191 + idPlantillaCorreo.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getTemplate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdPlantillaCorreo()).compareTo(other.isSetIdPlantillaCorreo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdPlantillaCorreo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idPlantillaCorreo, other.idPlantillaCorreo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getTemplate_args(");
      boolean first = true;

      sb.append("idPlantillaCorreo:");
      if (this.idPlantillaCorreo == null) {
        sb.append("null");
      } else {
        sb.append(this.idPlantillaCorreo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getTemplate_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplate_argsStandardScheme getScheme() {
        return new getTemplate_argsStandardScheme();
      }
    }

    private static class getTemplate_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getTemplate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_PLANTILLA_CORREO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.idPlantillaCorreo = iprot.readString();
                struct.setIdPlantillaCorreoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getTemplate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.idPlantillaCorreo != null) {
          oprot.writeFieldBegin(ID_PLANTILLA_CORREO_FIELD_DESC);
          oprot.writeString(struct.idPlantillaCorreo);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getTemplate_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplate_argsTupleScheme getScheme() {
        return new getTemplate_argsTupleScheme();
      }
    }

    private static class getTemplate_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getTemplate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdPlantillaCorreo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetIdPlantillaCorreo()) {
          oprot.writeString(struct.idPlantillaCorreo);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.idPlantillaCorreo = iprot.readString();
          struct.setIdPlantillaCorreoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getTemplate_result implements org.apache.thrift.TBase<getTemplate_result, getTemplate_result._Fields>, java.io.Serializable, Cloneable, Comparable<getTemplate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getTemplate_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getTemplate_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getTemplate_resultTupleSchemeFactory();

    public java.lang.String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getTemplate_result.class, metaDataMap);
    }

    public getTemplate_result() {
    }

    public getTemplate_result(
      java.lang.String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getTemplate_result(getTemplate_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public getTemplate_result deepCopy() {
      return new getTemplate_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public getTemplate_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getTemplate_result)
        return this.equals((getTemplate_result)that);
      return false;
    }

    public boolean equals(getTemplate_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getTemplate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getTemplate_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getTemplate_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplate_resultStandardScheme getScheme() {
        return new getTemplate_resultStandardScheme();
      }
    }

    private static class getTemplate_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getTemplate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getTemplate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getTemplate_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplate_resultTupleScheme getScheme() {
        return new getTemplate_resultTupleScheme();
      }
    }

    private static class getTemplate_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getTemplate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getTemplates_args implements org.apache.thrift.TBase<getTemplates_args, getTemplates_args._Fields>, java.io.Serializable, Cloneable, Comparable<getTemplates_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getTemplates_args");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getTemplates_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getTemplates_argsTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getTemplates_args.class, metaDataMap);
    }

    public getTemplates_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getTemplates_args(getTemplates_args other) {
    }

    public getTemplates_args deepCopy() {
      return new getTemplates_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getTemplates_args)
        return this.equals((getTemplates_args)that);
      return false;
    }

    public boolean equals(getTemplates_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(getTemplates_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getTemplates_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getTemplates_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplates_argsStandardScheme getScheme() {
        return new getTemplates_argsStandardScheme();
      }
    }

    private static class getTemplates_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getTemplates_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getTemplates_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getTemplates_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getTemplates_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplates_argsTupleScheme getScheme() {
        return new getTemplates_argsTupleScheme();
      }
    }

    private static class getTemplates_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getTemplates_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getTemplates_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getTemplates_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getTemplates_result implements org.apache.thrift.TBase<getTemplates_result, getTemplates_result._Fields>, java.io.Serializable, Cloneable, Comparable<getTemplates_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getTemplates_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getTemplates_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getTemplates_resultTupleSchemeFactory();

    public java.lang.String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getTemplates_result.class, metaDataMap);
    }

    public getTemplates_result() {
    }

    public getTemplates_result(
      java.lang.String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getTemplates_result(getTemplates_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public getTemplates_result deepCopy() {
      return new getTemplates_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public getTemplates_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getTemplates_result)
        return this.equals((getTemplates_result)that);
      return false;
    }

    public boolean equals(getTemplates_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getTemplates_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getTemplates_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getTemplates_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplates_resultStandardScheme getScheme() {
        return new getTemplates_resultStandardScheme();
      }
    }

    private static class getTemplates_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getTemplates_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getTemplates_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getTemplates_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getTemplates_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getTemplates_resultTupleScheme getScheme() {
        return new getTemplates_resultTupleScheme();
      }
    }

    private static class getTemplates_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getTemplates_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getTemplates_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getTemplates_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class insertTemplate_args implements org.apache.thrift.TBase<insertTemplate_args, insertTemplate_args._Fields>, java.io.Serializable, Cloneable, Comparable<insertTemplate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("insertTemplate_args");

    private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField ASUNTO_FIELD_DESC = new org.apache.thrift.protocol.TField("asunto", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField DESCRIPCION1_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion1", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField DESCRIPCION2_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion2", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField DESCRIPCION3_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion3", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField IMAGEN_FIELD_DESC = new org.apache.thrift.protocol.TField("imagen", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField ENLACE_REDES_SOCIALES_FIELD_DESC = new org.apache.thrift.protocol.TField("enlaceRedesSociales", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField DIRECCION_FIELD_DESC = new org.apache.thrift.protocol.TField("direccion", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField ESTADO_FIELD_DESC = new org.apache.thrift.protocol.TField("estado", org.apache.thrift.protocol.TType.STRING, (short)10);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new insertTemplate_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new insertTemplate_argsTupleSchemeFactory();

    public java.lang.String nombre; // required
    public java.lang.String asunto; // required
    public java.lang.String descripcion1; // required
    public java.lang.String descripcion2; // required
    public java.lang.String descripcion3; // required
    public java.lang.String imagen; // required
    public java.lang.String enlaceRedesSociales; // required
    public java.lang.String telefono; // required
    public java.lang.String direccion; // required
    public java.lang.String estado; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      NOMBRE((short)1, "nombre"),
      ASUNTO((short)2, "asunto"),
      DESCRIPCION1((short)3, "descripcion1"),
      DESCRIPCION2((short)4, "descripcion2"),
      DESCRIPCION3((short)5, "descripcion3"),
      IMAGEN((short)6, "imagen"),
      ENLACE_REDES_SOCIALES((short)7, "enlaceRedesSociales"),
      TELEFONO((short)8, "telefono"),
      DIRECCION((short)9, "direccion"),
      ESTADO((short)10, "estado");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // NOMBRE
            return NOMBRE;
          case 2: // ASUNTO
            return ASUNTO;
          case 3: // DESCRIPCION1
            return DESCRIPCION1;
          case 4: // DESCRIPCION2
            return DESCRIPCION2;
          case 5: // DESCRIPCION3
            return DESCRIPCION3;
          case 6: // IMAGEN
            return IMAGEN;
          case 7: // ENLACE_REDES_SOCIALES
            return ENLACE_REDES_SOCIALES;
          case 8: // TELEFONO
            return TELEFONO;
          case 9: // DIRECCION
            return DIRECCION;
          case 10: // ESTADO
            return ESTADO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ASUNTO, new org.apache.thrift.meta_data.FieldMetaData("asunto", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION1, new org.apache.thrift.meta_data.FieldMetaData("descripcion1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION2, new org.apache.thrift.meta_data.FieldMetaData("descripcion2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION3, new org.apache.thrift.meta_data.FieldMetaData("descripcion3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.IMAGEN, new org.apache.thrift.meta_data.FieldMetaData("imagen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ENLACE_REDES_SOCIALES, new org.apache.thrift.meta_data.FieldMetaData("enlaceRedesSociales", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DIRECCION, new org.apache.thrift.meta_data.FieldMetaData("direccion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ESTADO, new org.apache.thrift.meta_data.FieldMetaData("estado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(insertTemplate_args.class, metaDataMap);
    }

    public insertTemplate_args() {
    }

    public insertTemplate_args(
      java.lang.String nombre,
      java.lang.String asunto,
      java.lang.String descripcion1,
      java.lang.String descripcion2,
      java.lang.String descripcion3,
      java.lang.String imagen,
      java.lang.String enlaceRedesSociales,
      java.lang.String telefono,
      java.lang.String direccion,
      java.lang.String estado)
    {
      this();
      this.nombre = nombre;
      this.asunto = asunto;
      this.descripcion1 = descripcion1;
      this.descripcion2 = descripcion2;
      this.descripcion3 = descripcion3;
      this.imagen = imagen;
      this.enlaceRedesSociales = enlaceRedesSociales;
      this.telefono = telefono;
      this.direccion = direccion;
      this.estado = estado;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public insertTemplate_args(insertTemplate_args other) {
      if (other.isSetNombre()) {
        this.nombre = other.nombre;
      }
      if (other.isSetAsunto()) {
        this.asunto = other.asunto;
      }
      if (other.isSetDescripcion1()) {
        this.descripcion1 = other.descripcion1;
      }
      if (other.isSetDescripcion2()) {
        this.descripcion2 = other.descripcion2;
      }
      if (other.isSetDescripcion3()) {
        this.descripcion3 = other.descripcion3;
      }
      if (other.isSetImagen()) {
        this.imagen = other.imagen;
      }
      if (other.isSetEnlaceRedesSociales()) {
        this.enlaceRedesSociales = other.enlaceRedesSociales;
      }
      if (other.isSetTelefono()) {
        this.telefono = other.telefono;
      }
      if (other.isSetDireccion()) {
        this.direccion = other.direccion;
      }
      if (other.isSetEstado()) {
        this.estado = other.estado;
      }
    }

    public insertTemplate_args deepCopy() {
      return new insertTemplate_args(this);
    }

    @Override
    public void clear() {
      this.nombre = null;
      this.asunto = null;
      this.descripcion1 = null;
      this.descripcion2 = null;
      this.descripcion3 = null;
      this.imagen = null;
      this.enlaceRedesSociales = null;
      this.telefono = null;
      this.direccion = null;
      this.estado = null;
    }

    public java.lang.String getNombre() {
      return this.nombre;
    }

    public insertTemplate_args setNombre(java.lang.String nombre) {
      this.nombre = nombre;
      return this;
    }

    public void unsetNombre() {
      this.nombre = null;
    }

    /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
    public boolean isSetNombre() {
      return this.nombre != null;
    }

    public void setNombreIsSet(boolean value) {
      if (!value) {
        this.nombre = null;
      }
    }

    public java.lang.String getAsunto() {
      return this.asunto;
    }

    public insertTemplate_args setAsunto(java.lang.String asunto) {
      this.asunto = asunto;
      return this;
    }

    public void unsetAsunto() {
      this.asunto = null;
    }

    /** Returns true if field asunto is set (has been assigned a value) and false otherwise */
    public boolean isSetAsunto() {
      return this.asunto != null;
    }

    public void setAsuntoIsSet(boolean value) {
      if (!value) {
        this.asunto = null;
      }
    }

    public java.lang.String getDescripcion1() {
      return this.descripcion1;
    }

    public insertTemplate_args setDescripcion1(java.lang.String descripcion1) {
      this.descripcion1 = descripcion1;
      return this;
    }

    public void unsetDescripcion1() {
      this.descripcion1 = null;
    }

    /** Returns true if field descripcion1 is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion1() {
      return this.descripcion1 != null;
    }

    public void setDescripcion1IsSet(boolean value) {
      if (!value) {
        this.descripcion1 = null;
      }
    }

    public java.lang.String getDescripcion2() {
      return this.descripcion2;
    }

    public insertTemplate_args setDescripcion2(java.lang.String descripcion2) {
      this.descripcion2 = descripcion2;
      return this;
    }

    public void unsetDescripcion2() {
      this.descripcion2 = null;
    }

    /** Returns true if field descripcion2 is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion2() {
      return this.descripcion2 != null;
    }

    public void setDescripcion2IsSet(boolean value) {
      if (!value) {
        this.descripcion2 = null;
      }
    }

    public java.lang.String getDescripcion3() {
      return this.descripcion3;
    }

    public insertTemplate_args setDescripcion3(java.lang.String descripcion3) {
      this.descripcion3 = descripcion3;
      return this;
    }

    public void unsetDescripcion3() {
      this.descripcion3 = null;
    }

    /** Returns true if field descripcion3 is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion3() {
      return this.descripcion3 != null;
    }

    public void setDescripcion3IsSet(boolean value) {
      if (!value) {
        this.descripcion3 = null;
      }
    }

    public java.lang.String getImagen() {
      return this.imagen;
    }

    public insertTemplate_args setImagen(java.lang.String imagen) {
      this.imagen = imagen;
      return this;
    }

    public void unsetImagen() {
      this.imagen = null;
    }

    /** Returns true if field imagen is set (has been assigned a value) and false otherwise */
    public boolean isSetImagen() {
      return this.imagen != null;
    }

    public void setImagenIsSet(boolean value) {
      if (!value) {
        this.imagen = null;
      }
    }

    public java.lang.String getEnlaceRedesSociales() {
      return this.enlaceRedesSociales;
    }

    public insertTemplate_args setEnlaceRedesSociales(java.lang.String enlaceRedesSociales) {
      this.enlaceRedesSociales = enlaceRedesSociales;
      return this;
    }

    public void unsetEnlaceRedesSociales() {
      this.enlaceRedesSociales = null;
    }

    /** Returns true if field enlaceRedesSociales is set (has been assigned a value) and false otherwise */
    public boolean isSetEnlaceRedesSociales() {
      return this.enlaceRedesSociales != null;
    }

    public void setEnlaceRedesSocialesIsSet(boolean value) {
      if (!value) {
        this.enlaceRedesSociales = null;
      }
    }

    public java.lang.String getTelefono() {
      return this.telefono;
    }

    public insertTemplate_args setTelefono(java.lang.String telefono) {
      this.telefono = telefono;
      return this;
    }

    public void unsetTelefono() {
      this.telefono = null;
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return this.telefono != null;
    }

    public void setTelefonoIsSet(boolean value) {
      if (!value) {
        this.telefono = null;
      }
    }

    public java.lang.String getDireccion() {
      return this.direccion;
    }

    public insertTemplate_args setDireccion(java.lang.String direccion) {
      this.direccion = direccion;
      return this;
    }

    public void unsetDireccion() {
      this.direccion = null;
    }

    /** Returns true if field direccion is set (has been assigned a value) and false otherwise */
    public boolean isSetDireccion() {
      return this.direccion != null;
    }

    public void setDireccionIsSet(boolean value) {
      if (!value) {
        this.direccion = null;
      }
    }

    public java.lang.String getEstado() {
      return this.estado;
    }

    public insertTemplate_args setEstado(java.lang.String estado) {
      this.estado = estado;
      return this;
    }

    public void unsetEstado() {
      this.estado = null;
    }

    /** Returns true if field estado is set (has been assigned a value) and false otherwise */
    public boolean isSetEstado() {
      return this.estado != null;
    }

    public void setEstadoIsSet(boolean value) {
      if (!value) {
        this.estado = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case NOMBRE:
        if (value == null) {
          unsetNombre();
        } else {
          setNombre((java.lang.String)value);
        }
        break;

      case ASUNTO:
        if (value == null) {
          unsetAsunto();
        } else {
          setAsunto((java.lang.String)value);
        }
        break;

      case DESCRIPCION1:
        if (value == null) {
          unsetDescripcion1();
        } else {
          setDescripcion1((java.lang.String)value);
        }
        break;

      case DESCRIPCION2:
        if (value == null) {
          unsetDescripcion2();
        } else {
          setDescripcion2((java.lang.String)value);
        }
        break;

      case DESCRIPCION3:
        if (value == null) {
          unsetDescripcion3();
        } else {
          setDescripcion3((java.lang.String)value);
        }
        break;

      case IMAGEN:
        if (value == null) {
          unsetImagen();
        } else {
          setImagen((java.lang.String)value);
        }
        break;

      case ENLACE_REDES_SOCIALES:
        if (value == null) {
          unsetEnlaceRedesSociales();
        } else {
          setEnlaceRedesSociales((java.lang.String)value);
        }
        break;

      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.String)value);
        }
        break;

      case DIRECCION:
        if (value == null) {
          unsetDireccion();
        } else {
          setDireccion((java.lang.String)value);
        }
        break;

      case ESTADO:
        if (value == null) {
          unsetEstado();
        } else {
          setEstado((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case NOMBRE:
        return getNombre();

      case ASUNTO:
        return getAsunto();

      case DESCRIPCION1:
        return getDescripcion1();

      case DESCRIPCION2:
        return getDescripcion2();

      case DESCRIPCION3:
        return getDescripcion3();

      case IMAGEN:
        return getImagen();

      case ENLACE_REDES_SOCIALES:
        return getEnlaceRedesSociales();

      case TELEFONO:
        return getTelefono();

      case DIRECCION:
        return getDireccion();

      case ESTADO:
        return getEstado();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case NOMBRE:
        return isSetNombre();
      case ASUNTO:
        return isSetAsunto();
      case DESCRIPCION1:
        return isSetDescripcion1();
      case DESCRIPCION2:
        return isSetDescripcion2();
      case DESCRIPCION3:
        return isSetDescripcion3();
      case IMAGEN:
        return isSetImagen();
      case ENLACE_REDES_SOCIALES:
        return isSetEnlaceRedesSociales();
      case TELEFONO:
        return isSetTelefono();
      case DIRECCION:
        return isSetDireccion();
      case ESTADO:
        return isSetEstado();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof insertTemplate_args)
        return this.equals((insertTemplate_args)that);
      return false;
    }

    public boolean equals(insertTemplate_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_nombre = true && this.isSetNombre();
      boolean that_present_nombre = true && that.isSetNombre();
      if (this_present_nombre || that_present_nombre) {
        if (!(this_present_nombre && that_present_nombre))
          return false;
        if (!this.nombre.equals(that.nombre))
          return false;
      }

      boolean this_present_asunto = true && this.isSetAsunto();
      boolean that_present_asunto = true && that.isSetAsunto();
      if (this_present_asunto || that_present_asunto) {
        if (!(this_present_asunto && that_present_asunto))
          return false;
        if (!this.asunto.equals(that.asunto))
          return false;
      }

      boolean this_present_descripcion1 = true && this.isSetDescripcion1();
      boolean that_present_descripcion1 = true && that.isSetDescripcion1();
      if (this_present_descripcion1 || that_present_descripcion1) {
        if (!(this_present_descripcion1 && that_present_descripcion1))
          return false;
        if (!this.descripcion1.equals(that.descripcion1))
          return false;
      }

      boolean this_present_descripcion2 = true && this.isSetDescripcion2();
      boolean that_present_descripcion2 = true && that.isSetDescripcion2();
      if (this_present_descripcion2 || that_present_descripcion2) {
        if (!(this_present_descripcion2 && that_present_descripcion2))
          return false;
        if (!this.descripcion2.equals(that.descripcion2))
          return false;
      }

      boolean this_present_descripcion3 = true && this.isSetDescripcion3();
      boolean that_present_descripcion3 = true && that.isSetDescripcion3();
      if (this_present_descripcion3 || that_present_descripcion3) {
        if (!(this_present_descripcion3 && that_present_descripcion3))
          return false;
        if (!this.descripcion3.equals(that.descripcion3))
          return false;
      }

      boolean this_present_imagen = true && this.isSetImagen();
      boolean that_present_imagen = true && that.isSetImagen();
      if (this_present_imagen || that_present_imagen) {
        if (!(this_present_imagen && that_present_imagen))
          return false;
        if (!this.imagen.equals(that.imagen))
          return false;
      }

      boolean this_present_enlaceRedesSociales = true && this.isSetEnlaceRedesSociales();
      boolean that_present_enlaceRedesSociales = true && that.isSetEnlaceRedesSociales();
      if (this_present_enlaceRedesSociales || that_present_enlaceRedesSociales) {
        if (!(this_present_enlaceRedesSociales && that_present_enlaceRedesSociales))
          return false;
        if (!this.enlaceRedesSociales.equals(that.enlaceRedesSociales))
          return false;
      }

      boolean this_present_telefono = true && this.isSetTelefono();
      boolean that_present_telefono = true && that.isSetTelefono();
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (!this.telefono.equals(that.telefono))
          return false;
      }

      boolean this_present_direccion = true && this.isSetDireccion();
      boolean that_present_direccion = true && that.isSetDireccion();
      if (this_present_direccion || that_present_direccion) {
        if (!(this_present_direccion && that_present_direccion))
          return false;
        if (!this.direccion.equals(that.direccion))
          return false;
      }

      boolean this_present_estado = true && this.isSetEstado();
      boolean that_present_estado = true && that.isSetEstado();
      if (this_present_estado || that_present_estado) {
        if (!(this_present_estado && that_present_estado))
          return false;
        if (!this.estado.equals(that.estado))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
      if (isSetNombre())
        hashCode = hashCode * 8191 + nombre.hashCode();

      hashCode = hashCode * 8191 + ((isSetAsunto()) ? 131071 : 524287);
      if (isSetAsunto())
        hashCode = hashCode * 8191 + asunto.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion1()) ? 131071 : 524287);
      if (isSetDescripcion1())
        hashCode = hashCode * 8191 + descripcion1.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion2()) ? 131071 : 524287);
      if (isSetDescripcion2())
        hashCode = hashCode * 8191 + descripcion2.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion3()) ? 131071 : 524287);
      if (isSetDescripcion3())
        hashCode = hashCode * 8191 + descripcion3.hashCode();

      hashCode = hashCode * 8191 + ((isSetImagen()) ? 131071 : 524287);
      if (isSetImagen())
        hashCode = hashCode * 8191 + imagen.hashCode();

      hashCode = hashCode * 8191 + ((isSetEnlaceRedesSociales()) ? 131071 : 524287);
      if (isSetEnlaceRedesSociales())
        hashCode = hashCode * 8191 + enlaceRedesSociales.hashCode();

      hashCode = hashCode * 8191 + ((isSetTelefono()) ? 131071 : 524287);
      if (isSetTelefono())
        hashCode = hashCode * 8191 + telefono.hashCode();

      hashCode = hashCode * 8191 + ((isSetDireccion()) ? 131071 : 524287);
      if (isSetDireccion())
        hashCode = hashCode * 8191 + direccion.hashCode();

      hashCode = hashCode * 8191 + ((isSetEstado()) ? 131071 : 524287);
      if (isSetEstado())
        hashCode = hashCode * 8191 + estado.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(insertTemplate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNombre()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetAsunto()).compareTo(other.isSetAsunto());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAsunto()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.asunto, other.asunto);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion1()).compareTo(other.isSetDescripcion1());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion1()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion1, other.descripcion1);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion2()).compareTo(other.isSetDescripcion2());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion2()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion2, other.descripcion2);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion3()).compareTo(other.isSetDescripcion3());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion3()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion3, other.descripcion3);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetImagen()).compareTo(other.isSetImagen());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetImagen()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imagen, other.imagen);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEnlaceRedesSociales()).compareTo(other.isSetEnlaceRedesSociales());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEnlaceRedesSociales()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enlaceRedesSociales, other.enlaceRedesSociales);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDireccion()).compareTo(other.isSetDireccion());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDireccion()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.direccion, other.direccion);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEstado()).compareTo(other.isSetEstado());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEstado()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estado, other.estado);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("insertTemplate_args(");
      boolean first = true;

      sb.append("nombre:");
      if (this.nombre == null) {
        sb.append("null");
      } else {
        sb.append(this.nombre);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("asunto:");
      if (this.asunto == null) {
        sb.append("null");
      } else {
        sb.append(this.asunto);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion1:");
      if (this.descripcion1 == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion1);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion2:");
      if (this.descripcion2 == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion2);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion3:");
      if (this.descripcion3 == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion3);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("imagen:");
      if (this.imagen == null) {
        sb.append("null");
      } else {
        sb.append(this.imagen);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("enlaceRedesSociales:");
      if (this.enlaceRedesSociales == null) {
        sb.append("null");
      } else {
        sb.append(this.enlaceRedesSociales);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("telefono:");
      if (this.telefono == null) {
        sb.append("null");
      } else {
        sb.append(this.telefono);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("direccion:");
      if (this.direccion == null) {
        sb.append("null");
      } else {
        sb.append(this.direccion);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("estado:");
      if (this.estado == null) {
        sb.append("null");
      } else {
        sb.append(this.estado);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class insertTemplate_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public insertTemplate_argsStandardScheme getScheme() {
        return new insertTemplate_argsStandardScheme();
      }
    }

    private static class insertTemplate_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<insertTemplate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, insertTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // NOMBRE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.nombre = iprot.readString();
                struct.setNombreIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // ASUNTO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.asunto = iprot.readString();
                struct.setAsuntoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // DESCRIPCION1
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion1 = iprot.readString();
                struct.setDescripcion1IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // DESCRIPCION2
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion2 = iprot.readString();
                struct.setDescripcion2IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // DESCRIPCION3
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion3 = iprot.readString();
                struct.setDescripcion3IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // IMAGEN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.imagen = iprot.readString();
                struct.setImagenIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // ENLACE_REDES_SOCIALES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.enlaceRedesSociales = iprot.readString();
                struct.setEnlaceRedesSocialesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 8: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.telefono = iprot.readString();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 9: // DIRECCION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.direccion = iprot.readString();
                struct.setDireccionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 10: // ESTADO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.estado = iprot.readString();
                struct.setEstadoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, insertTemplate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.nombre != null) {
          oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
          oprot.writeString(struct.nombre);
          oprot.writeFieldEnd();
        }
        if (struct.asunto != null) {
          oprot.writeFieldBegin(ASUNTO_FIELD_DESC);
          oprot.writeString(struct.asunto);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion1 != null) {
          oprot.writeFieldBegin(DESCRIPCION1_FIELD_DESC);
          oprot.writeString(struct.descripcion1);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion2 != null) {
          oprot.writeFieldBegin(DESCRIPCION2_FIELD_DESC);
          oprot.writeString(struct.descripcion2);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion3 != null) {
          oprot.writeFieldBegin(DESCRIPCION3_FIELD_DESC);
          oprot.writeString(struct.descripcion3);
          oprot.writeFieldEnd();
        }
        if (struct.imagen != null) {
          oprot.writeFieldBegin(IMAGEN_FIELD_DESC);
          oprot.writeString(struct.imagen);
          oprot.writeFieldEnd();
        }
        if (struct.enlaceRedesSociales != null) {
          oprot.writeFieldBegin(ENLACE_REDES_SOCIALES_FIELD_DESC);
          oprot.writeString(struct.enlaceRedesSociales);
          oprot.writeFieldEnd();
        }
        if (struct.telefono != null) {
          oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
          oprot.writeString(struct.telefono);
          oprot.writeFieldEnd();
        }
        if (struct.direccion != null) {
          oprot.writeFieldBegin(DIRECCION_FIELD_DESC);
          oprot.writeString(struct.direccion);
          oprot.writeFieldEnd();
        }
        if (struct.estado != null) {
          oprot.writeFieldBegin(ESTADO_FIELD_DESC);
          oprot.writeString(struct.estado);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class insertTemplate_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public insertTemplate_argsTupleScheme getScheme() {
        return new insertTemplate_argsTupleScheme();
      }
    }

    private static class insertTemplate_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<insertTemplate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, insertTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetNombre()) {
          optionals.set(0);
        }
        if (struct.isSetAsunto()) {
          optionals.set(1);
        }
        if (struct.isSetDescripcion1()) {
          optionals.set(2);
        }
        if (struct.isSetDescripcion2()) {
          optionals.set(3);
        }
        if (struct.isSetDescripcion3()) {
          optionals.set(4);
        }
        if (struct.isSetImagen()) {
          optionals.set(5);
        }
        if (struct.isSetEnlaceRedesSociales()) {
          optionals.set(6);
        }
        if (struct.isSetTelefono()) {
          optionals.set(7);
        }
        if (struct.isSetDireccion()) {
          optionals.set(8);
        }
        if (struct.isSetEstado()) {
          optionals.set(9);
        }
        oprot.writeBitSet(optionals, 10);
        if (struct.isSetNombre()) {
          oprot.writeString(struct.nombre);
        }
        if (struct.isSetAsunto()) {
          oprot.writeString(struct.asunto);
        }
        if (struct.isSetDescripcion1()) {
          oprot.writeString(struct.descripcion1);
        }
        if (struct.isSetDescripcion2()) {
          oprot.writeString(struct.descripcion2);
        }
        if (struct.isSetDescripcion3()) {
          oprot.writeString(struct.descripcion3);
        }
        if (struct.isSetImagen()) {
          oprot.writeString(struct.imagen);
        }
        if (struct.isSetEnlaceRedesSociales()) {
          oprot.writeString(struct.enlaceRedesSociales);
        }
        if (struct.isSetTelefono()) {
          oprot.writeString(struct.telefono);
        }
        if (struct.isSetDireccion()) {
          oprot.writeString(struct.direccion);
        }
        if (struct.isSetEstado()) {
          oprot.writeString(struct.estado);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, insertTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(10);
        if (incoming.get(0)) {
          struct.nombre = iprot.readString();
          struct.setNombreIsSet(true);
        }
        if (incoming.get(1)) {
          struct.asunto = iprot.readString();
          struct.setAsuntoIsSet(true);
        }
        if (incoming.get(2)) {
          struct.descripcion1 = iprot.readString();
          struct.setDescripcion1IsSet(true);
        }
        if (incoming.get(3)) {
          struct.descripcion2 = iprot.readString();
          struct.setDescripcion2IsSet(true);
        }
        if (incoming.get(4)) {
          struct.descripcion3 = iprot.readString();
          struct.setDescripcion3IsSet(true);
        }
        if (incoming.get(5)) {
          struct.imagen = iprot.readString();
          struct.setImagenIsSet(true);
        }
        if (incoming.get(6)) {
          struct.enlaceRedesSociales = iprot.readString();
          struct.setEnlaceRedesSocialesIsSet(true);
        }
        if (incoming.get(7)) {
          struct.telefono = iprot.readString();
          struct.setTelefonoIsSet(true);
        }
        if (incoming.get(8)) {
          struct.direccion = iprot.readString();
          struct.setDireccionIsSet(true);
        }
        if (incoming.get(9)) {
          struct.estado = iprot.readString();
          struct.setEstadoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class insertTemplate_result implements org.apache.thrift.TBase<insertTemplate_result, insertTemplate_result._Fields>, java.io.Serializable, Cloneable, Comparable<insertTemplate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("insertTemplate_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new insertTemplate_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new insertTemplate_resultTupleSchemeFactory();

    public java.lang.String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(insertTemplate_result.class, metaDataMap);
    }

    public insertTemplate_result() {
    }

    public insertTemplate_result(
      java.lang.String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public insertTemplate_result(insertTemplate_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public insertTemplate_result deepCopy() {
      return new insertTemplate_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public insertTemplate_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof insertTemplate_result)
        return this.equals((insertTemplate_result)that);
      return false;
    }

    public boolean equals(insertTemplate_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(insertTemplate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("insertTemplate_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class insertTemplate_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public insertTemplate_resultStandardScheme getScheme() {
        return new insertTemplate_resultStandardScheme();
      }
    }

    private static class insertTemplate_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<insertTemplate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, insertTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, insertTemplate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class insertTemplate_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public insertTemplate_resultTupleScheme getScheme() {
        return new insertTemplate_resultTupleScheme();
      }
    }

    private static class insertTemplate_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<insertTemplate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, insertTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, insertTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateTemplate_args implements org.apache.thrift.TBase<updateTemplate_args, updateTemplate_args._Fields>, java.io.Serializable, Cloneable, Comparable<updateTemplate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateTemplate_args");

    private static final org.apache.thrift.protocol.TField ID_PLANTILLA_CORREO_FIELD_DESC = new org.apache.thrift.protocol.TField("idPlantillaCorreo", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField NOMBRE_FIELD_DESC = new org.apache.thrift.protocol.TField("nombre", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField ASUNTO_FIELD_DESC = new org.apache.thrift.protocol.TField("asunto", org.apache.thrift.protocol.TType.STRING, (short)3);
    private static final org.apache.thrift.protocol.TField DESCRIPCION1_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion1", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField DESCRIPCION2_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion2", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField DESCRIPCION3_FIELD_DESC = new org.apache.thrift.protocol.TField("descripcion3", org.apache.thrift.protocol.TType.STRING, (short)6);
    private static final org.apache.thrift.protocol.TField IMAGEN_FIELD_DESC = new org.apache.thrift.protocol.TField("imagen", org.apache.thrift.protocol.TType.STRING, (short)7);
    private static final org.apache.thrift.protocol.TField ENLACE_REDES_SOCIALES_FIELD_DESC = new org.apache.thrift.protocol.TField("enlaceRedesSociales", org.apache.thrift.protocol.TType.STRING, (short)8);
    private static final org.apache.thrift.protocol.TField TELEFONO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefono", org.apache.thrift.protocol.TType.STRING, (short)9);
    private static final org.apache.thrift.protocol.TField DIRECCION_FIELD_DESC = new org.apache.thrift.protocol.TField("direccion", org.apache.thrift.protocol.TType.STRING, (short)10);
    private static final org.apache.thrift.protocol.TField ESTADO_FIELD_DESC = new org.apache.thrift.protocol.TField("estado", org.apache.thrift.protocol.TType.STRING, (short)11);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateTemplate_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateTemplate_argsTupleSchemeFactory();

    public java.lang.String idPlantillaCorreo; // required
    public java.lang.String nombre; // required
    public java.lang.String asunto; // required
    public java.lang.String descripcion1; // required
    public java.lang.String descripcion2; // required
    public java.lang.String descripcion3; // required
    public java.lang.String imagen; // required
    public java.lang.String enlaceRedesSociales; // required
    public java.lang.String telefono; // required
    public java.lang.String direccion; // required
    public java.lang.String estado; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ID_PLANTILLA_CORREO((short)1, "idPlantillaCorreo"),
      NOMBRE((short)2, "nombre"),
      ASUNTO((short)3, "asunto"),
      DESCRIPCION1((short)4, "descripcion1"),
      DESCRIPCION2((short)5, "descripcion2"),
      DESCRIPCION3((short)6, "descripcion3"),
      IMAGEN((short)7, "imagen"),
      ENLACE_REDES_SOCIALES((short)8, "enlaceRedesSociales"),
      TELEFONO((short)9, "telefono"),
      DIRECCION((short)10, "direccion"),
      ESTADO((short)11, "estado");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ID_PLANTILLA_CORREO
            return ID_PLANTILLA_CORREO;
          case 2: // NOMBRE
            return NOMBRE;
          case 3: // ASUNTO
            return ASUNTO;
          case 4: // DESCRIPCION1
            return DESCRIPCION1;
          case 5: // DESCRIPCION2
            return DESCRIPCION2;
          case 6: // DESCRIPCION3
            return DESCRIPCION3;
          case 7: // IMAGEN
            return IMAGEN;
          case 8: // ENLACE_REDES_SOCIALES
            return ENLACE_REDES_SOCIALES;
          case 9: // TELEFONO
            return TELEFONO;
          case 10: // DIRECCION
            return DIRECCION;
          case 11: // ESTADO
            return ESTADO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ID_PLANTILLA_CORREO, new org.apache.thrift.meta_data.FieldMetaData("idPlantillaCorreo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.NOMBRE, new org.apache.thrift.meta_data.FieldMetaData("nombre", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ASUNTO, new org.apache.thrift.meta_data.FieldMetaData("asunto", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION1, new org.apache.thrift.meta_data.FieldMetaData("descripcion1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION2, new org.apache.thrift.meta_data.FieldMetaData("descripcion2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPCION3, new org.apache.thrift.meta_data.FieldMetaData("descripcion3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.IMAGEN, new org.apache.thrift.meta_data.FieldMetaData("imagen", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ENLACE_REDES_SOCIALES, new org.apache.thrift.meta_data.FieldMetaData("enlaceRedesSociales", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.TELEFONO, new org.apache.thrift.meta_data.FieldMetaData("telefono", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DIRECCION, new org.apache.thrift.meta_data.FieldMetaData("direccion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.ESTADO, new org.apache.thrift.meta_data.FieldMetaData("estado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateTemplate_args.class, metaDataMap);
    }

    public updateTemplate_args() {
    }

    public updateTemplate_args(
      java.lang.String idPlantillaCorreo,
      java.lang.String nombre,
      java.lang.String asunto,
      java.lang.String descripcion1,
      java.lang.String descripcion2,
      java.lang.String descripcion3,
      java.lang.String imagen,
      java.lang.String enlaceRedesSociales,
      java.lang.String telefono,
      java.lang.String direccion,
      java.lang.String estado)
    {
      this();
      this.idPlantillaCorreo = idPlantillaCorreo;
      this.nombre = nombre;
      this.asunto = asunto;
      this.descripcion1 = descripcion1;
      this.descripcion2 = descripcion2;
      this.descripcion3 = descripcion3;
      this.imagen = imagen;
      this.enlaceRedesSociales = enlaceRedesSociales;
      this.telefono = telefono;
      this.direccion = direccion;
      this.estado = estado;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateTemplate_args(updateTemplate_args other) {
      if (other.isSetIdPlantillaCorreo()) {
        this.idPlantillaCorreo = other.idPlantillaCorreo;
      }
      if (other.isSetNombre()) {
        this.nombre = other.nombre;
      }
      if (other.isSetAsunto()) {
        this.asunto = other.asunto;
      }
      if (other.isSetDescripcion1()) {
        this.descripcion1 = other.descripcion1;
      }
      if (other.isSetDescripcion2()) {
        this.descripcion2 = other.descripcion2;
      }
      if (other.isSetDescripcion3()) {
        this.descripcion3 = other.descripcion3;
      }
      if (other.isSetImagen()) {
        this.imagen = other.imagen;
      }
      if (other.isSetEnlaceRedesSociales()) {
        this.enlaceRedesSociales = other.enlaceRedesSociales;
      }
      if (other.isSetTelefono()) {
        this.telefono = other.telefono;
      }
      if (other.isSetDireccion()) {
        this.direccion = other.direccion;
      }
      if (other.isSetEstado()) {
        this.estado = other.estado;
      }
    }

    public updateTemplate_args deepCopy() {
      return new updateTemplate_args(this);
    }

    @Override
    public void clear() {
      this.idPlantillaCorreo = null;
      this.nombre = null;
      this.asunto = null;
      this.descripcion1 = null;
      this.descripcion2 = null;
      this.descripcion3 = null;
      this.imagen = null;
      this.enlaceRedesSociales = null;
      this.telefono = null;
      this.direccion = null;
      this.estado = null;
    }

    public java.lang.String getIdPlantillaCorreo() {
      return this.idPlantillaCorreo;
    }

    public updateTemplate_args setIdPlantillaCorreo(java.lang.String idPlantillaCorreo) {
      this.idPlantillaCorreo = idPlantillaCorreo;
      return this;
    }

    public void unsetIdPlantillaCorreo() {
      this.idPlantillaCorreo = null;
    }

    /** Returns true if field idPlantillaCorreo is set (has been assigned a value) and false otherwise */
    public boolean isSetIdPlantillaCorreo() {
      return this.idPlantillaCorreo != null;
    }

    public void setIdPlantillaCorreoIsSet(boolean value) {
      if (!value) {
        this.idPlantillaCorreo = null;
      }
    }

    public java.lang.String getNombre() {
      return this.nombre;
    }

    public updateTemplate_args setNombre(java.lang.String nombre) {
      this.nombre = nombre;
      return this;
    }

    public void unsetNombre() {
      this.nombre = null;
    }

    /** Returns true if field nombre is set (has been assigned a value) and false otherwise */
    public boolean isSetNombre() {
      return this.nombre != null;
    }

    public void setNombreIsSet(boolean value) {
      if (!value) {
        this.nombre = null;
      }
    }

    public java.lang.String getAsunto() {
      return this.asunto;
    }

    public updateTemplate_args setAsunto(java.lang.String asunto) {
      this.asunto = asunto;
      return this;
    }

    public void unsetAsunto() {
      this.asunto = null;
    }

    /** Returns true if field asunto is set (has been assigned a value) and false otherwise */
    public boolean isSetAsunto() {
      return this.asunto != null;
    }

    public void setAsuntoIsSet(boolean value) {
      if (!value) {
        this.asunto = null;
      }
    }

    public java.lang.String getDescripcion1() {
      return this.descripcion1;
    }

    public updateTemplate_args setDescripcion1(java.lang.String descripcion1) {
      this.descripcion1 = descripcion1;
      return this;
    }

    public void unsetDescripcion1() {
      this.descripcion1 = null;
    }

    /** Returns true if field descripcion1 is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion1() {
      return this.descripcion1 != null;
    }

    public void setDescripcion1IsSet(boolean value) {
      if (!value) {
        this.descripcion1 = null;
      }
    }

    public java.lang.String getDescripcion2() {
      return this.descripcion2;
    }

    public updateTemplate_args setDescripcion2(java.lang.String descripcion2) {
      this.descripcion2 = descripcion2;
      return this;
    }

    public void unsetDescripcion2() {
      this.descripcion2 = null;
    }

    /** Returns true if field descripcion2 is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion2() {
      return this.descripcion2 != null;
    }

    public void setDescripcion2IsSet(boolean value) {
      if (!value) {
        this.descripcion2 = null;
      }
    }

    public java.lang.String getDescripcion3() {
      return this.descripcion3;
    }

    public updateTemplate_args setDescripcion3(java.lang.String descripcion3) {
      this.descripcion3 = descripcion3;
      return this;
    }

    public void unsetDescripcion3() {
      this.descripcion3 = null;
    }

    /** Returns true if field descripcion3 is set (has been assigned a value) and false otherwise */
    public boolean isSetDescripcion3() {
      return this.descripcion3 != null;
    }

    public void setDescripcion3IsSet(boolean value) {
      if (!value) {
        this.descripcion3 = null;
      }
    }

    public java.lang.String getImagen() {
      return this.imagen;
    }

    public updateTemplate_args setImagen(java.lang.String imagen) {
      this.imagen = imagen;
      return this;
    }

    public void unsetImagen() {
      this.imagen = null;
    }

    /** Returns true if field imagen is set (has been assigned a value) and false otherwise */
    public boolean isSetImagen() {
      return this.imagen != null;
    }

    public void setImagenIsSet(boolean value) {
      if (!value) {
        this.imagen = null;
      }
    }

    public java.lang.String getEnlaceRedesSociales() {
      return this.enlaceRedesSociales;
    }

    public updateTemplate_args setEnlaceRedesSociales(java.lang.String enlaceRedesSociales) {
      this.enlaceRedesSociales = enlaceRedesSociales;
      return this;
    }

    public void unsetEnlaceRedesSociales() {
      this.enlaceRedesSociales = null;
    }

    /** Returns true if field enlaceRedesSociales is set (has been assigned a value) and false otherwise */
    public boolean isSetEnlaceRedesSociales() {
      return this.enlaceRedesSociales != null;
    }

    public void setEnlaceRedesSocialesIsSet(boolean value) {
      if (!value) {
        this.enlaceRedesSociales = null;
      }
    }

    public java.lang.String getTelefono() {
      return this.telefono;
    }

    public updateTemplate_args setTelefono(java.lang.String telefono) {
      this.telefono = telefono;
      return this;
    }

    public void unsetTelefono() {
      this.telefono = null;
    }

    /** Returns true if field telefono is set (has been assigned a value) and false otherwise */
    public boolean isSetTelefono() {
      return this.telefono != null;
    }

    public void setTelefonoIsSet(boolean value) {
      if (!value) {
        this.telefono = null;
      }
    }

    public java.lang.String getDireccion() {
      return this.direccion;
    }

    public updateTemplate_args setDireccion(java.lang.String direccion) {
      this.direccion = direccion;
      return this;
    }

    public void unsetDireccion() {
      this.direccion = null;
    }

    /** Returns true if field direccion is set (has been assigned a value) and false otherwise */
    public boolean isSetDireccion() {
      return this.direccion != null;
    }

    public void setDireccionIsSet(boolean value) {
      if (!value) {
        this.direccion = null;
      }
    }

    public java.lang.String getEstado() {
      return this.estado;
    }

    public updateTemplate_args setEstado(java.lang.String estado) {
      this.estado = estado;
      return this;
    }

    public void unsetEstado() {
      this.estado = null;
    }

    /** Returns true if field estado is set (has been assigned a value) and false otherwise */
    public boolean isSetEstado() {
      return this.estado != null;
    }

    public void setEstadoIsSet(boolean value) {
      if (!value) {
        this.estado = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        if (value == null) {
          unsetIdPlantillaCorreo();
        } else {
          setIdPlantillaCorreo((java.lang.String)value);
        }
        break;

      case NOMBRE:
        if (value == null) {
          unsetNombre();
        } else {
          setNombre((java.lang.String)value);
        }
        break;

      case ASUNTO:
        if (value == null) {
          unsetAsunto();
        } else {
          setAsunto((java.lang.String)value);
        }
        break;

      case DESCRIPCION1:
        if (value == null) {
          unsetDescripcion1();
        } else {
          setDescripcion1((java.lang.String)value);
        }
        break;

      case DESCRIPCION2:
        if (value == null) {
          unsetDescripcion2();
        } else {
          setDescripcion2((java.lang.String)value);
        }
        break;

      case DESCRIPCION3:
        if (value == null) {
          unsetDescripcion3();
        } else {
          setDescripcion3((java.lang.String)value);
        }
        break;

      case IMAGEN:
        if (value == null) {
          unsetImagen();
        } else {
          setImagen((java.lang.String)value);
        }
        break;

      case ENLACE_REDES_SOCIALES:
        if (value == null) {
          unsetEnlaceRedesSociales();
        } else {
          setEnlaceRedesSociales((java.lang.String)value);
        }
        break;

      case TELEFONO:
        if (value == null) {
          unsetTelefono();
        } else {
          setTelefono((java.lang.String)value);
        }
        break;

      case DIRECCION:
        if (value == null) {
          unsetDireccion();
        } else {
          setDireccion((java.lang.String)value);
        }
        break;

      case ESTADO:
        if (value == null) {
          unsetEstado();
        } else {
          setEstado((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ID_PLANTILLA_CORREO:
        return getIdPlantillaCorreo();

      case NOMBRE:
        return getNombre();

      case ASUNTO:
        return getAsunto();

      case DESCRIPCION1:
        return getDescripcion1();

      case DESCRIPCION2:
        return getDescripcion2();

      case DESCRIPCION3:
        return getDescripcion3();

      case IMAGEN:
        return getImagen();

      case ENLACE_REDES_SOCIALES:
        return getEnlaceRedesSociales();

      case TELEFONO:
        return getTelefono();

      case DIRECCION:
        return getDireccion();

      case ESTADO:
        return getEstado();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ID_PLANTILLA_CORREO:
        return isSetIdPlantillaCorreo();
      case NOMBRE:
        return isSetNombre();
      case ASUNTO:
        return isSetAsunto();
      case DESCRIPCION1:
        return isSetDescripcion1();
      case DESCRIPCION2:
        return isSetDescripcion2();
      case DESCRIPCION3:
        return isSetDescripcion3();
      case IMAGEN:
        return isSetImagen();
      case ENLACE_REDES_SOCIALES:
        return isSetEnlaceRedesSociales();
      case TELEFONO:
        return isSetTelefono();
      case DIRECCION:
        return isSetDireccion();
      case ESTADO:
        return isSetEstado();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateTemplate_args)
        return this.equals((updateTemplate_args)that);
      return false;
    }

    public boolean equals(updateTemplate_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_idPlantillaCorreo = true && this.isSetIdPlantillaCorreo();
      boolean that_present_idPlantillaCorreo = true && that.isSetIdPlantillaCorreo();
      if (this_present_idPlantillaCorreo || that_present_idPlantillaCorreo) {
        if (!(this_present_idPlantillaCorreo && that_present_idPlantillaCorreo))
          return false;
        if (!this.idPlantillaCorreo.equals(that.idPlantillaCorreo))
          return false;
      }

      boolean this_present_nombre = true && this.isSetNombre();
      boolean that_present_nombre = true && that.isSetNombre();
      if (this_present_nombre || that_present_nombre) {
        if (!(this_present_nombre && that_present_nombre))
          return false;
        if (!this.nombre.equals(that.nombre))
          return false;
      }

      boolean this_present_asunto = true && this.isSetAsunto();
      boolean that_present_asunto = true && that.isSetAsunto();
      if (this_present_asunto || that_present_asunto) {
        if (!(this_present_asunto && that_present_asunto))
          return false;
        if (!this.asunto.equals(that.asunto))
          return false;
      }

      boolean this_present_descripcion1 = true && this.isSetDescripcion1();
      boolean that_present_descripcion1 = true && that.isSetDescripcion1();
      if (this_present_descripcion1 || that_present_descripcion1) {
        if (!(this_present_descripcion1 && that_present_descripcion1))
          return false;
        if (!this.descripcion1.equals(that.descripcion1))
          return false;
      }

      boolean this_present_descripcion2 = true && this.isSetDescripcion2();
      boolean that_present_descripcion2 = true && that.isSetDescripcion2();
      if (this_present_descripcion2 || that_present_descripcion2) {
        if (!(this_present_descripcion2 && that_present_descripcion2))
          return false;
        if (!this.descripcion2.equals(that.descripcion2))
          return false;
      }

      boolean this_present_descripcion3 = true && this.isSetDescripcion3();
      boolean that_present_descripcion3 = true && that.isSetDescripcion3();
      if (this_present_descripcion3 || that_present_descripcion3) {
        if (!(this_present_descripcion3 && that_present_descripcion3))
          return false;
        if (!this.descripcion3.equals(that.descripcion3))
          return false;
      }

      boolean this_present_imagen = true && this.isSetImagen();
      boolean that_present_imagen = true && that.isSetImagen();
      if (this_present_imagen || that_present_imagen) {
        if (!(this_present_imagen && that_present_imagen))
          return false;
        if (!this.imagen.equals(that.imagen))
          return false;
      }

      boolean this_present_enlaceRedesSociales = true && this.isSetEnlaceRedesSociales();
      boolean that_present_enlaceRedesSociales = true && that.isSetEnlaceRedesSociales();
      if (this_present_enlaceRedesSociales || that_present_enlaceRedesSociales) {
        if (!(this_present_enlaceRedesSociales && that_present_enlaceRedesSociales))
          return false;
        if (!this.enlaceRedesSociales.equals(that.enlaceRedesSociales))
          return false;
      }

      boolean this_present_telefono = true && this.isSetTelefono();
      boolean that_present_telefono = true && that.isSetTelefono();
      if (this_present_telefono || that_present_telefono) {
        if (!(this_present_telefono && that_present_telefono))
          return false;
        if (!this.telefono.equals(that.telefono))
          return false;
      }

      boolean this_present_direccion = true && this.isSetDireccion();
      boolean that_present_direccion = true && that.isSetDireccion();
      if (this_present_direccion || that_present_direccion) {
        if (!(this_present_direccion && that_present_direccion))
          return false;
        if (!this.direccion.equals(that.direccion))
          return false;
      }

      boolean this_present_estado = true && this.isSetEstado();
      boolean that_present_estado = true && that.isSetEstado();
      if (this_present_estado || that_present_estado) {
        if (!(this_present_estado && that_present_estado))
          return false;
        if (!this.estado.equals(that.estado))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetIdPlantillaCorreo()) ? 131071 : 524287);
      if (isSetIdPlantillaCorreo())
        hashCode = hashCode * 8191 + idPlantillaCorreo.hashCode();

      hashCode = hashCode * 8191 + ((isSetNombre()) ? 131071 : 524287);
      if (isSetNombre())
        hashCode = hashCode * 8191 + nombre.hashCode();

      hashCode = hashCode * 8191 + ((isSetAsunto()) ? 131071 : 524287);
      if (isSetAsunto())
        hashCode = hashCode * 8191 + asunto.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion1()) ? 131071 : 524287);
      if (isSetDescripcion1())
        hashCode = hashCode * 8191 + descripcion1.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion2()) ? 131071 : 524287);
      if (isSetDescripcion2())
        hashCode = hashCode * 8191 + descripcion2.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescripcion3()) ? 131071 : 524287);
      if (isSetDescripcion3())
        hashCode = hashCode * 8191 + descripcion3.hashCode();

      hashCode = hashCode * 8191 + ((isSetImagen()) ? 131071 : 524287);
      if (isSetImagen())
        hashCode = hashCode * 8191 + imagen.hashCode();

      hashCode = hashCode * 8191 + ((isSetEnlaceRedesSociales()) ? 131071 : 524287);
      if (isSetEnlaceRedesSociales())
        hashCode = hashCode * 8191 + enlaceRedesSociales.hashCode();

      hashCode = hashCode * 8191 + ((isSetTelefono()) ? 131071 : 524287);
      if (isSetTelefono())
        hashCode = hashCode * 8191 + telefono.hashCode();

      hashCode = hashCode * 8191 + ((isSetDireccion()) ? 131071 : 524287);
      if (isSetDireccion())
        hashCode = hashCode * 8191 + direccion.hashCode();

      hashCode = hashCode * 8191 + ((isSetEstado()) ? 131071 : 524287);
      if (isSetEstado())
        hashCode = hashCode * 8191 + estado.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateTemplate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetIdPlantillaCorreo()).compareTo(other.isSetIdPlantillaCorreo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIdPlantillaCorreo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idPlantillaCorreo, other.idPlantillaCorreo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNombre()).compareTo(other.isSetNombre());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNombre()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nombre, other.nombre);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetAsunto()).compareTo(other.isSetAsunto());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetAsunto()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.asunto, other.asunto);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion1()).compareTo(other.isSetDescripcion1());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion1()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion1, other.descripcion1);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion2()).compareTo(other.isSetDescripcion2());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion2()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion2, other.descripcion2);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescripcion3()).compareTo(other.isSetDescripcion3());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescripcion3()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descripcion3, other.descripcion3);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetImagen()).compareTo(other.isSetImagen());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetImagen()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imagen, other.imagen);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEnlaceRedesSociales()).compareTo(other.isSetEnlaceRedesSociales());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEnlaceRedesSociales()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enlaceRedesSociales, other.enlaceRedesSociales);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetTelefono()).compareTo(other.isSetTelefono());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTelefono()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefono, other.telefono);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDireccion()).compareTo(other.isSetDireccion());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDireccion()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.direccion, other.direccion);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetEstado()).compareTo(other.isSetEstado());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetEstado()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estado, other.estado);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateTemplate_args(");
      boolean first = true;

      sb.append("idPlantillaCorreo:");
      if (this.idPlantillaCorreo == null) {
        sb.append("null");
      } else {
        sb.append(this.idPlantillaCorreo);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("nombre:");
      if (this.nombre == null) {
        sb.append("null");
      } else {
        sb.append(this.nombre);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("asunto:");
      if (this.asunto == null) {
        sb.append("null");
      } else {
        sb.append(this.asunto);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion1:");
      if (this.descripcion1 == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion1);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion2:");
      if (this.descripcion2 == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion2);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("descripcion3:");
      if (this.descripcion3 == null) {
        sb.append("null");
      } else {
        sb.append(this.descripcion3);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("imagen:");
      if (this.imagen == null) {
        sb.append("null");
      } else {
        sb.append(this.imagen);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("enlaceRedesSociales:");
      if (this.enlaceRedesSociales == null) {
        sb.append("null");
      } else {
        sb.append(this.enlaceRedesSociales);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("telefono:");
      if (this.telefono == null) {
        sb.append("null");
      } else {
        sb.append(this.telefono);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("direccion:");
      if (this.direccion == null) {
        sb.append("null");
      } else {
        sb.append(this.direccion);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("estado:");
      if (this.estado == null) {
        sb.append("null");
      } else {
        sb.append(this.estado);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateTemplate_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateTemplate_argsStandardScheme getScheme() {
        return new updateTemplate_argsStandardScheme();
      }
    }

    private static class updateTemplate_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateTemplate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ID_PLANTILLA_CORREO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.idPlantillaCorreo = iprot.readString();
                struct.setIdPlantillaCorreoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // NOMBRE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.nombre = iprot.readString();
                struct.setNombreIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // ASUNTO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.asunto = iprot.readString();
                struct.setAsuntoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // DESCRIPCION1
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion1 = iprot.readString();
                struct.setDescripcion1IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // DESCRIPCION2
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion2 = iprot.readString();
                struct.setDescripcion2IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // DESCRIPCION3
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.descripcion3 = iprot.readString();
                struct.setDescripcion3IsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // IMAGEN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.imagen = iprot.readString();
                struct.setImagenIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 8: // ENLACE_REDES_SOCIALES
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.enlaceRedesSociales = iprot.readString();
                struct.setEnlaceRedesSocialesIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 9: // TELEFONO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.telefono = iprot.readString();
                struct.setTelefonoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 10: // DIRECCION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.direccion = iprot.readString();
                struct.setDireccionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 11: // ESTADO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.estado = iprot.readString();
                struct.setEstadoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateTemplate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.idPlantillaCorreo != null) {
          oprot.writeFieldBegin(ID_PLANTILLA_CORREO_FIELD_DESC);
          oprot.writeString(struct.idPlantillaCorreo);
          oprot.writeFieldEnd();
        }
        if (struct.nombre != null) {
          oprot.writeFieldBegin(NOMBRE_FIELD_DESC);
          oprot.writeString(struct.nombre);
          oprot.writeFieldEnd();
        }
        if (struct.asunto != null) {
          oprot.writeFieldBegin(ASUNTO_FIELD_DESC);
          oprot.writeString(struct.asunto);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion1 != null) {
          oprot.writeFieldBegin(DESCRIPCION1_FIELD_DESC);
          oprot.writeString(struct.descripcion1);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion2 != null) {
          oprot.writeFieldBegin(DESCRIPCION2_FIELD_DESC);
          oprot.writeString(struct.descripcion2);
          oprot.writeFieldEnd();
        }
        if (struct.descripcion3 != null) {
          oprot.writeFieldBegin(DESCRIPCION3_FIELD_DESC);
          oprot.writeString(struct.descripcion3);
          oprot.writeFieldEnd();
        }
        if (struct.imagen != null) {
          oprot.writeFieldBegin(IMAGEN_FIELD_DESC);
          oprot.writeString(struct.imagen);
          oprot.writeFieldEnd();
        }
        if (struct.enlaceRedesSociales != null) {
          oprot.writeFieldBegin(ENLACE_REDES_SOCIALES_FIELD_DESC);
          oprot.writeString(struct.enlaceRedesSociales);
          oprot.writeFieldEnd();
        }
        if (struct.telefono != null) {
          oprot.writeFieldBegin(TELEFONO_FIELD_DESC);
          oprot.writeString(struct.telefono);
          oprot.writeFieldEnd();
        }
        if (struct.direccion != null) {
          oprot.writeFieldBegin(DIRECCION_FIELD_DESC);
          oprot.writeString(struct.direccion);
          oprot.writeFieldEnd();
        }
        if (struct.estado != null) {
          oprot.writeFieldBegin(ESTADO_FIELD_DESC);
          oprot.writeString(struct.estado);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateTemplate_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateTemplate_argsTupleScheme getScheme() {
        return new updateTemplate_argsTupleScheme();
      }
    }

    private static class updateTemplate_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateTemplate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetIdPlantillaCorreo()) {
          optionals.set(0);
        }
        if (struct.isSetNombre()) {
          optionals.set(1);
        }
        if (struct.isSetAsunto()) {
          optionals.set(2);
        }
        if (struct.isSetDescripcion1()) {
          optionals.set(3);
        }
        if (struct.isSetDescripcion2()) {
          optionals.set(4);
        }
        if (struct.isSetDescripcion3()) {
          optionals.set(5);
        }
        if (struct.isSetImagen()) {
          optionals.set(6);
        }
        if (struct.isSetEnlaceRedesSociales()) {
          optionals.set(7);
        }
        if (struct.isSetTelefono()) {
          optionals.set(8);
        }
        if (struct.isSetDireccion()) {
          optionals.set(9);
        }
        if (struct.isSetEstado()) {
          optionals.set(10);
        }
        oprot.writeBitSet(optionals, 11);
        if (struct.isSetIdPlantillaCorreo()) {
          oprot.writeString(struct.idPlantillaCorreo);
        }
        if (struct.isSetNombre()) {
          oprot.writeString(struct.nombre);
        }
        if (struct.isSetAsunto()) {
          oprot.writeString(struct.asunto);
        }
        if (struct.isSetDescripcion1()) {
          oprot.writeString(struct.descripcion1);
        }
        if (struct.isSetDescripcion2()) {
          oprot.writeString(struct.descripcion2);
        }
        if (struct.isSetDescripcion3()) {
          oprot.writeString(struct.descripcion3);
        }
        if (struct.isSetImagen()) {
          oprot.writeString(struct.imagen);
        }
        if (struct.isSetEnlaceRedesSociales()) {
          oprot.writeString(struct.enlaceRedesSociales);
        }
        if (struct.isSetTelefono()) {
          oprot.writeString(struct.telefono);
        }
        if (struct.isSetDireccion()) {
          oprot.writeString(struct.direccion);
        }
        if (struct.isSetEstado()) {
          oprot.writeString(struct.estado);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(11);
        if (incoming.get(0)) {
          struct.idPlantillaCorreo = iprot.readString();
          struct.setIdPlantillaCorreoIsSet(true);
        }
        if (incoming.get(1)) {
          struct.nombre = iprot.readString();
          struct.setNombreIsSet(true);
        }
        if (incoming.get(2)) {
          struct.asunto = iprot.readString();
          struct.setAsuntoIsSet(true);
        }
        if (incoming.get(3)) {
          struct.descripcion1 = iprot.readString();
          struct.setDescripcion1IsSet(true);
        }
        if (incoming.get(4)) {
          struct.descripcion2 = iprot.readString();
          struct.setDescripcion2IsSet(true);
        }
        if (incoming.get(5)) {
          struct.descripcion3 = iprot.readString();
          struct.setDescripcion3IsSet(true);
        }
        if (incoming.get(6)) {
          struct.imagen = iprot.readString();
          struct.setImagenIsSet(true);
        }
        if (incoming.get(7)) {
          struct.enlaceRedesSociales = iprot.readString();
          struct.setEnlaceRedesSocialesIsSet(true);
        }
        if (incoming.get(8)) {
          struct.telefono = iprot.readString();
          struct.setTelefonoIsSet(true);
        }
        if (incoming.get(9)) {
          struct.direccion = iprot.readString();
          struct.setDireccionIsSet(true);
        }
        if (incoming.get(10)) {
          struct.estado = iprot.readString();
          struct.setEstadoIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class updateTemplate_result implements org.apache.thrift.TBase<updateTemplate_result, updateTemplate_result._Fields>, java.io.Serializable, Cloneable, Comparable<updateTemplate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("updateTemplate_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRING, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new updateTemplate_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new updateTemplate_resultTupleSchemeFactory();

    public java.lang.String success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(updateTemplate_result.class, metaDataMap);
    }

    public updateTemplate_result() {
    }

    public updateTemplate_result(
      java.lang.String success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public updateTemplate_result(updateTemplate_result other) {
      if (other.isSetSuccess()) {
        this.success = other.success;
      }
    }

    public updateTemplate_result deepCopy() {
      return new updateTemplate_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public java.lang.String getSuccess() {
      return this.success;
    }

    public updateTemplate_result setSuccess(java.lang.String success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof updateTemplate_result)
        return this.equals((updateTemplate_result)that);
      return false;
    }

    public boolean equals(updateTemplate_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(updateTemplate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("updateTemplate_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class updateTemplate_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateTemplate_resultStandardScheme getScheme() {
        return new updateTemplate_resultStandardScheme();
      }
    }

    private static class updateTemplate_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<updateTemplate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, updateTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.success = iprot.readString();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, updateTemplate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeString(struct.success);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class updateTemplate_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public updateTemplate_resultTupleScheme getScheme() {
        return new updateTemplate_resultTupleScheme();
      }
    }

    private static class updateTemplate_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<updateTemplate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, updateTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          oprot.writeString(struct.success);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, updateTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = iprot.readString();
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
